{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///Wildix.IntegrationService.min.js","webpack:///webpack/bootstrap 3b4d5ee10ed9ca5bb9d4?6d41","webpack:///../~/backbone/backbone.js?fd44","webpack:///../~/js-logger/src/logger.js?779b","webpack:///../~/underscore/underscore.js?2adb","webpack:///./IntegrationService.js?3d10","webpack:///./Models/Call.js?da9a","webpack:///../~/webpack/buildin/global.js?62a6","webpack:///./Chat.js?48f1","webpack:///./Roster.js?4c1f","webpack:///./Telephony.js?ff72","webpack:///./plugins/backbone.mixinCompositeModel.js?585f","webpack:///./Connector.js?0e39","webpack:///./Models/Location.js?3f38","webpack:///./Models/Presence.js?790b","webpack:///./Models/User.js?b929","webpack:///./index.js?d939","webpack:///../~/reconnectingwebsocket/reconnecting-websocket.js?7ec4","webpack:///../~/webpack/buildin/module.js?17a8","webpack:///external \"jQuery\"?0cb8"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_17__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","self","undefined","_","$","Backbone","apply","previousBackbone","slice","Array","VERSION","noConflict","emulateHTTP","emulateJSON","_listening","Events","eventSplitter","eventsApi","iteratee","events","callback","opts","names","context","keys","length","test","split","on","_events","onApi","ctx","listening","_listeners","id","interop","listenTo","obj","_listenId","uniqueId","listeningTo","_listeningTo","Listening","error","tryCatchOn","options","handlers","count","push","e","off","offApi","listeners","stopListening","ids","isEmpty","remaining","j","handler","_callback","cleanup","once","onceMap","bind","listenToOnce","map","offer","arguments","trigger","Math","max","args","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","a1","a2","a3","listener","unbind","extend","Model","attributes","attrs","preinitialize","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","method","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","_isModel","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","isString","existing","_prepareModel","_addReference","orderChanged","some","index","_removeReference","previousModels","pop","unshift","shift","_byId","modelId","where","first","findWhere","Error","isFunction","sortBy","pluck","create","callbackOpts","values","CollectionIterator","ITERATOR_VALUES","ITERATOR_KEYS","entries","ITERATOR_KEYSVALUES","indexOf","_onModelEvent","event","prevId","$$iterator","Symbol","iterator","kind","_collection","_kind","_index","next","done","View","pick","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","find","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","undelegate","_createElement","document","createElement","className","_setAttributes","addMethod","attribute","cb","defaultVal","addUnderscoreMethods","Class","methods","each","instance","isObject","modelMatcher","matcher","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","chain","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","modelMethods","pairs","invert","omit","config","Base","mixin","mappings","functions","memo","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","decodedFragment","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__","__WEBPACK_AMD_DEFINE_FACTORY__","Logger","logHandler","contextualLoggersByNameMap","scope","func","target","defineLogLevel","TRACE","DEBUG","INFO","TIME","WARN","ERROR","OFF","ContextualLogger","defaultContext","setLevel","filterLevel","log","info","newLevel","getLevel","enabledFor","lvl","trace","debug","warn","time","label","timeEnd","level","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","console","timerLabel","Date","getTime","useDefaults","defaultLevel","previousUnderscore","ArrayProto","ObjProto","SymbolProto","toString","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","builtinIteratee","optimizeCb","argCount","accumulator","identity","Infinity","restArguments","startIndex","baseCreate","shallowProperty","deepGet","MAX_ARRAY_INDEX","pow","getLength","isArrayLike","results","currentKey","createReduce","dir","reducer","predicate","keyFinder","findKey","list","negate","item","fromIndex","guard","contextPath","computed","lastComputed","v","random","rand","temp","criteria","left","right","a","b","group","behavior","reStrSymbol","pass","compact","Boolean","flatten","input","shallow","strict","output","idx","isArguments","len","otherArrays","uniq","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","sortedIndex","low","high","mid","floor","createIndexFinder","predicateFind","isNaN","range","step","ceil","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","position","bindAll","memoize","hasher","cache","address","delay","setTimeout","throttle","timeout","later","leading","now","throttled","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","before","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","proto","prop","allKeys","mapObject","createAssigner","keysFunc","source","extendOwn","keyInObj","String","props","tap","interceptor","isMatch","eq","deepEq","aStack","bStack","valueOf","areArrays","aCtor","bCtor","isElement","nodelist","childNodes","Int8Array","isFinite","isSymbol","parseFloat","isNumber","isNull","isUndefined","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","join","testRegexp","replaceRegexp","string","unescape","fallback","idCounter","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","_chain","chainResult","Connector","IntegrationService","logger","Modules","addModule","_options","app","version","userAgent","navigator","platform","_connectionOptions","automaticOpen","reconnectInterval","maxReconnectInterval","reconnectDelay","timeoutInterval","maxReconnectAttempts","_connection","_macComponentVersion","wiservice","_winComponentVersion","_version","toUpperCase","Module","getConnection","_onReady","_onEventWiservice","toLowerCase","_onMessage","_onConnectionError","Roster","Telephony","Chat","setAuthData","_ready","isReady","_getVersion","_countCollaborationss","msgdata","disconnected","collaboration","connected","_collaborationStatus","_countCollaborations","command","isConnected","getCollaborationStatus","message","send","response","force","number","channel","destination","destinationType","direction","duration","record","state","g","eval","_integrationService","IS","User","_onConnectedCollaboration","_onSetRoster","_onUpdateUser","_onRemoveUser","_onAddUser","_subscribed","isSubscribed","_needSubscribe","subscribe","_subscribe","_prepareUser","user","presence","extra","show","status","deviceShow","until","roster","newRoster","Call","_onSetCalls","_onUpdateCall","_onRemoveCall","_onAddCall","_sendMessage","answer","hangup","hold","unhold","calls","previousState","mixinCompositeModel","originalSet","originalToJSON","makeComposite","composite","_triggerChildEvent","propertyModel","from","ReconnectingWebSocket","reconnectDecay","_authData","_requestsCallback","_isInstalled","_isConnected","_isAuthorized","_requestTimeout","_requestTimer","_currentDefaultPortIndex","_defaultPort","port","localStorage","getItem","host","onconnecting","_onConnectingWS","onopen","_onOpenWS","onerror","_onErrorWS","onmessage","_onMessageWS","onclose","_onCloseWS","abort","isInstalled","isAuthorized","reconnect","refresh","connect","_generateID","timeoutAt","_checkRequestTimeout","requestString","_getCurrentPort","_currentCandidat","_connectToNextCandidat","_getCandidates","candidates","_candidates","_autorize","setItem","messageId","request","possible","dd","substr","application","lat","lng","isAvailable","isUnavailable","getFormattedUntil","format","Presence","Location","email","extension","faxNumber","language","mobilePhone","officePhone","picture","protocols","generateEvent","evt","createEvent","initCustomEvent","reconnectAttempts","readyState","WebSocket","CONNECTING","protocol","ws","forcedClose","timedOut","eventTarget","dispatchEvent","reconnectAttempt","debugAll","localWs","OPEN","isReconnect","CLOSED","code","reason","wasClean","CLOSING","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"Wildix.IntegrationService.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IntegrationService\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"Wildix\"] = root[\"Wildix\"] || {}, root[\"Wildix\"][\"IntegrationService\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IntegrationService\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"Wildix\"] = root[\"Wildix\"] || {}, root[\"Wildix\"][\"IntegrationService\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.4.0\n\n//     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(17), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n        .replace(optionalParam, '(?:$1)?')\n        .replace(namedParam, function(match, optional) {\n          return optional ? match : '([^/?]+)';\n        })\n        .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(16)(module)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Represents a Wildix IntegrationService instance\n *\n * @class IntegrationService\n * @memberof Wildix\n * @extends external:Backbone.Events\n *\n * @param options {Object} options\n *\n * @example\n * var WIService = new Wildix.IntegrationService({\n *   name: \"MySomeApplication\",\n *   version: '1.0.0'\n * }\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(0), __webpack_require__(10));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['Logger', 'underscore', 'backbone', 'Connector'], factory);\n    } else {\n        // Browser\n        root.IntegrationService = factory(root.Logger, root.underscore, root.Backbone, root.Connector);\n    }\n}(this, function (Logger, _, Backbone, Connector){\n    'use strict';\n    // enable all logs\n    // Wildix.IntegrationService.Logger.setLevel(Wildix.IntegrationService.Logger.DEBUG)\n    // Logger.useDefaults();\n    // Logger.setLevel(Logger.DEBUG);  // Global logging level.\n\n    var logger = Logger.get('IntegrationService');\n\n    function IntegrationService(options){\n        this.initialize(options);\n    }\n\n    IntegrationService.Logger = Logger;\n\n    IntegrationService.Modules = {};\n\n    IntegrationService.addModule = function(name, module){\n        IntegrationService.Modules[name] = module;\n    };\n\n    _.extend(IntegrationService.prototype, Backbone.Events, {\n        _options: {\n            app: 'APP_WEBCRM',\n            name: 'WebCRM',\n            version: '0.0.1',\n            userAgent: navigator.userAgent,\n            platform: navigator.platform\n        },\n\n        _connectionOptions: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDelay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _connection: null,\n\n        _macComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _winComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _version: null,\n\n        initialize: function(options){\n            logger.info('Initialize Integration service', options);\n\n            _.extend(this._options, options);\n\n            this._options.app = 'APP_' + this._options.name.toUpperCase();\n\n            for (var key in IntegrationService.Modules) {\n                logger.info('Build module:', key);\n                if(typeof IntegrationService.Modules[key] === 'object'){\n                    var Module = function(){};\n                    Module.prototype = IntegrationService.Modules[key];\n\n                    this[key] = new Module();\n                    this[key].initialize(this);\n                }else{\n                    this[key] = new IntegrationService.Modules[key](this);\n                }\n            }\n\n            this.getConnection().on('ready', this._onReady, this);\n            this.getConnection().on('event:wiservice', this._onEventWiservice, this);\n            this.getConnection().on('message:' + this._options.app.toLowerCase(), this._onMessage, this);\n            this.getConnection().on('error', this._onConnectionError, this);\n        },\n\n        /**\n         * Plugin that provides Roster functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Roster}\n         */\n        Roster: null,\n\n        /**\n         * Plugin that provides Telephony functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Telephony}\n         */\n        Telephony: null,\n\n        /**\n         * Plugin that provides Chat functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Chat}\n         */\n        Chat: null,\n\n        /**\n         * Return connection to WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {Wildix.Connector}\n         */\n        getConnection: function() {\n            if(this._connection === null){\n                this._connection = new Connector(this._connectionOptions);\n                this._connection.setAuthData(this._options);\n            }\n            return this._connection;\n        },\n\n        _ready: false,\n\n        /**\n         * Return true if fully initialized connection with WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isReady: function(){\n            return this._ready;\n        },\n\n        _onReady: function(){\n            this._getVersion();\n        },\n\n        _countCollaborationss: 0,\n        _onEventWiservice: function(data){\n            logger.info('_onEventWiservice', data);\n            if(data && data.msgdata){\n                if(data.msgdata.type == 'connectionstatus'){\n                    if(data.msgdata.disconnected && data.msgdata.disconnected.collaboration){\n                        // maybe disconnected\n                        if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                            // have another collaboration connection\n                        }else{\n                            this._collaborationStatus = 'disconnected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }else if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        if(this._countCollaborations != data.msgdata.connected.collaboration.length){\n                            this._collaborationStatus = 'connected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }\n\n                    this._countCollaborations = 0;\n                    if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        this._countCollaborations = data.msgdata.connected.collaboration.length;\n                    }\n                }\n            }\n        },\n\n        _onMessage: function(data){\n            this.trigger(data.msgdata.command, data.msgdata.msgdata);\n        },\n\n        _onConnectionError: function(){\n            this.trigger('connection:error', this);\n        },\n\n        /**\n         * Return true if IntegrationService connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isConnected: function(){\n            return this.getConnection().isConnected();\n        },\n\n        _collaborationStatus: null,\n\n        /**\n         * Return collaboration status or null if IntegrationService not connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {string|null}\n         */\n        getCollaborationStatus: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n            if(this._collaborationStatus === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getconnectionstatus'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    logger.info('collaboration status', response);\n                    var connected = response.connected || {};\n                    if(connected.collaboration && connected.collaboration.length > 0){\n                        this._collaborationStatus = 'connected';\n                        this._countCollaborations = response.connected.collaboration.length;\n                        this.trigger('collaboration:' + this._collaborationStatus, this);\n                        this._ready = true;\n                        this.trigger('ready', this);\n                    }\n                }.bind(this));\n            }\n            return this._collaborationStatus;\n        },\n\n        /**\n         * Return collaboration version.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @private\n         * @param {string} name of app\n         * @param {bollean} force request version\n         * @return {string}\n         */\n        _getVersion: function(name, force){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(this._version === null || force){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getversion'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    if(response && response.wiservice){\n                        this._version = response;\n                        this.getCollaborationStatus();\n                    }\n                }.bind(this));\n            }\n\n            if(name){\n                if(this._version && this._version.hasOwnProperty(name) && this._version[name]){\n                    return this._version[name];\n                }\n                return null;\n            }\n            return this._version;\n        }\n    });\n\n    return IntegrationService;\n}));\n\n/**\n * Indicates that could not connect to WIService.\n *\n * @event Wildix.IntegrationService#connection:error\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('connection:error', function(){\n *   console.warn('WIService not installed or is not running');\n * });\n */\n\n/**\n * Indicates that collaboration is connected and IntegrationService received status.\n *\n * @event Wildix.IntegrationService#ready\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('ready', function(){\n *   var status = WIService.getCollaborationStatus();\n *   if(status == 'disconnected'){\n *       console.warn('Collaboration not running');\n *   }\n * });\n */\n\n/**\n * Indicates that Collaboration is connected to WIService.\n *\n * @event Wildix.IntegrationService#collaboration:connected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:connected', function(){\n *   console.log('Collaboration connected');\n * });\n */\n\n/**\n * Indicates that Collaboration is disconnected from the WIService.\n *\n * @event Wildix.IntegrationService#collaboration:disconnected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:disconnected', function(){\n *   console.log('Collaboration disconnected');\n * });\n */\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents call information.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.<br />\n * Used in Telephony plugin and can be received from {@link Wildix.Telephony}.\n *\n * @class Call\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property name {string} name of the connected call.\n * @property number {string} number of the connected call.\n * @property channel {string}\n * @property destination {string}\n * @property destinationType {string}\n * @property direction {string}\n * @property duration {string}\n * @property id {string}\n * @property record {string}\n * @property state {string}\n * @property type {string}\n * @example\n * user.get('call').get(property)\n * or\n * call.get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Call = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Call');\n\n    return Backbone.Model.extend({\n        defaults: {\n            name: '',\n            number: '',\n            channel: '',\n            destination: '',\n            destinationType: '',\n            direction: '',\n            duration: '',\n            id: '',\n            record: '',\n            state: '',\n            type: ''\n        },\n        idAttribute: 'channel',\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Chat functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Chat|Chat} property.\n *\n * @class Chat\n * @memberof Wildix\n * @extends external:Backbone.Events\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(3), __webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone'], factory);\n    } else if (typeof EventEmitter !== 'undefined'){\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone);\n    }\n}(this, function (IntegrationService, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Chat');\n\n    IntegrationService.addModule('Chat', _.extend({}, Backbone.Events, {\n\n        _integrationService: null,\n        _connection: null,\n\n        initialize: function(IS){\n            logger.info('Initialize');\n\n            this._integrationService = IS;\n            this._connection = this._integrationService.getConnection();\n        },\n\n        /**\n         * Initiates a open chat to a specified extension.\n         *\n         * @example\n         * WIService.Chat.open('101');\n         *\n         * @memberof Wildix.Chat#\n         * @param {string} number  A number to open chat.\n         * @return {void}\n         */\n        open: function(number){\n            var message = {\n                'msgdata': {\n                    'type': 'chat',\n                    'number': number\n                }\n            };\n            this._connection.send(message);\n        }\n\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Roster functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Roster|Roster} property.\n *\n * @class Roster\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Roster.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(3),\n                __webpack_require__(2),\n                __webpack_require__(0),\n                __webpack_require__(13)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/User'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.User);\n    }\n}(this, function (IntegrationService, _, Backbone, User){\n    'use strict';\n    var logger = Logger.get('Roster');\n\n    IntegrationService.addModule('Roster', Backbone.Collection.extend({\n        model: User,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(IS){\n            logger.info('initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setroster', this._onSetRoster, this);\n            this._integrationService.on('updateuser', this._onUpdateUser, this);\n            this._integrationService.on('removeuser', this._onRemoveUser, this);\n            this._integrationService.on('adduser', this._onAddUser, this);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a roster event.\n         *\n         * @memberof Wildix.Roster#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to roster events\n         *\n         * @memberof Wildix.Roster#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'roster'\n                    }\n                };\n\n                this._connection.send(message);\n            }\n        },\n\n        _prepareUser: function(item){\n            var user = _.clone(item);\n            user.location = item.presence.extra.location;\n            user.call = item.presence.extra.call;\n            user.presence = {\n                type: item.presence.type,\n                show: item.presence.show,\n                status: item.presence.status,\n                deviceShow: item.presence.extra['device-show'],\n                until: item.presence.until\n            };\n\n            return user;\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetRoster: function(roster){\n            logger.info('Received roster:', roster);\n            var newRoster = [];\n            for(var i = 0; i < roster.length; i++){\n                newRoster.push(this._prepareUser(roster[i]));\n            }\n            this.reset(newRoster);\n        },\n\n        _onUpdateUser: function(user){\n            logger.info('Update user:', user);\n            var item = this.get(user.id);\n            if(item){\n                item.set(this._prepareUser(user));\n            }\n        },\n\n        _onRemoveUser: function(user){\n            logger.info('Removed user:', user);\n            var item = this.get(user.id);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddUser: function(user){\n            logger.info('Added user:', user);\n\n            if(!this.get(user.id)){\n                this.add(this._prepareUser(user));\n            }\n        }\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Telephony functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Telephony|Telephony} property.\n *\n * @class Telephony\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Telephony.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(3),\n                __webpack_require__(2),\n                __webpack_require__(0),\n                __webpack_require__(4)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/Call'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.Call);\n    }\n}(this, function (IntegrationService, _, Backbone, Call){\n    'use strict';\n    var logger = Logger.get('Telephony');\n\n    IntegrationService.addModule('Telephony', Backbone.Collection.extend({\n        model: Call,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(){\n            logger.info('Initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setcalls', this._onSetCalls, this);\n            this._integrationService.on('updatecall', this._onUpdateCall, this);\n            this._integrationService.on('removecall', this._onRemoveCall, this);\n            this._integrationService.on('addcall', this._onAddCall, this);\n        },\n\n        /**\n         * Initiates a call to a specified number.\n         *\n         * @example\n         * WIService.Telephony.call('101');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} number A number to call.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        call: function(number, callback){\n            this._sendMessage('call', {'number': number}, callback);\n        },\n\n        /**\n         * Initiates an answer to the call for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.answer('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        answer: function(channel, callback){\n            this._sendMessage('answer', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call hangup for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.hangup('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        hangup: function(channel, callback){\n            this._sendMessage('hangup', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call hold for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.hold('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        hold: function(channel, callback){\n            this._sendMessage('hold', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call unhold for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.unhold('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        unhold: function(channel, callback){\n            this._sendMessage('unhold', {'channel': channel}, callback);\n        },\n\n        _sendMessage: function(type, data, callback){\n            var message = {\n                'msgdata': {\n                    'type': type\n                }\n            };\n            _.extend(message.msgdata, data);\n            this._connection.send(message, callback);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a call event.\n         *\n         * @memberof Wildix.Telephony#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to call events\n         *\n         * @memberof Wildix.Telephony#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n                this._sendMessage('subscribe', {'event': 'calls'});\n            }\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetCalls: function(calls){\n            logger.info('Received calls:', calls);\n\n            this.reset(calls);\n        },\n\n        _onUpdateCall: function(call){\n            logger.info('Update call:', call);\n            var item = this.get(call.channel);\n\n            if (!item) {\n                return;\n            }\n\n            item.set(call);\n\n            if (call.state === 'up') {\n                var previousState = item.previousAttributes().state;\n\n                if (previousState === 'ring' && call.direction === 'incoming') {\n                    this.trigger('answer', call);\n                } else if (previousState === 'hold') {\n                    this.trigger('unhold', call);\n                }\n            } else if (call.state === 'hold') {\n                this.trigger('hold', call);\n            }\n        },\n\n        _onRemoveCall: function(call){\n            logger.info('Removed call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                this.remove(item);\n                this.trigger('hangup', call);\n            }\n        },\n\n        _onAddCall: function(call){\n            logger.info('Added call:', call);\n            if(!this.get(call.channel)){\n                this.add(call);\n            }\n        }\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * idea from https://github.com/prantlf/backbone.composite-model\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone'], factory);\n    } else {\n        // Browser\n        factory(root.underscore, root.Backbone);\n    }\n}(this, function (_, Backbone){\n    'use strict';\n\n    Backbone.mixinCompositeModel = function (prototype) {\n        var originalSet = prototype.set;\n        var originalToJSON = prototype.toJSON;\n\n        return _.extend(prototype, {\n\n            makeComposite: function (options) {\n                for(var property in this.composite){\n                    this.get(property).on('all', this._triggerChildEvent.bind(this, property), this);\n                }\n            },\n\n            // Overriding set\n            set: function(attributes, options) {\n                for(var property in this.composite){\n                    if(attributes[property]){\n                        var propertyModel = this.get(property);\n                        if(propertyModel){\n                            propertyModel.set(attributes[property], options);\n                            delete attributes[property];\n                        }else{\n                            attributes[property] = new this.composite[property](attributes[property]);\n                        }\n                    }\n                }\n\n                return originalSet.call(this, attributes, options);\n            },\n\n            _triggerChildEvent: function(){\n                var property = arguments[0];\n                var args = Array.from(arguments);\n                args = args.slice(1);\n\n                args[0] = args[0].split(':');\n                args[0].splice(1, 0, property);\n                args[0] = args[0].join(':');\n\n                args.splice(1, 0, this);\n                this.trigger.apply(this, args);\n                if(arguments[1] == 'change'){\n                    this.trigger('change', this, args[args.length - 1]);\n                }\n            },\n\n            // Overrides the `Backbone.Model:toJSON()` method to ensure that the\n            // up-to-date nested attribute values will be present in the result\n            toJSON: function(options) {\n                var result = originalToJSON.call(this, options);\n                for(var property in this.composite){\n                    var child = this.get(property);\n                    if (child) {\n                        result[property] = child.toJSON();\n                    }\n                }\n                return result;\n            }\n        });\n    };\n\n    return Backbone.mixinCompositeModel;\n}));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Provides connectivity to WIService\n *\n * @class Connector\n * @memberof Wildix\n * @extends external:Backbone.Events\n * @param options {Object} options\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(15), __webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['ReconnectingWebSocket', 'underscore', 'backbone'], factory);\n    } else if (typeof ReconnectingWebSocket !== 'undefined' && typeof ReconnectingWebSocket !== 'undefined'){\n        // Browser\n        root.Connector = factory(root.ReconnectingWebSocket, root.underscore, root.Backbone);\n    }\n}(this, function (ReconnectingWebSocket, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Connector');\n\n    function Connector(options){\n        this.initialize(options);\n    }\n\n    _.extend(Connector.prototype, Backbone.Events, {\n\n        _options: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDecay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _authData: null,\n\n        _connection: null,\n        _requestsCallback: {},\n\n        _isInstalled: false,\n        _isConnected: false,\n        _isAuthorized: false,\n\n        _requestTimeout: 120000,\n        _requestTimer: null,\n\n        _currentDefaultPortIndex: 0,\n        _defaultPort: [8888, 8889, 8890],\n\n        initialize: function(options){\n            logger.info('Initialize', options);\n\n            _.extend(this._options, options);\n\n            var port = window.localStorage.getItem('Wildix.IntegrationService.Port');\n            if(port){\n                this.getConnection(port);\n            }else{\n                this.getConnection();\n            }\n        },\n\n        getConnection: function(port) {\n            if(!port){\n                port = this._defaultPort[this._currentDefaultPortIndex];\n            }\n            if(this._connection === null){\n                var host = 'wss://wildixintegration.eu:' + port + '/';\n                this._connection = new ReconnectingWebSocket(host, null, this._options);\n\n                this._connection.onconnecting = this._onConnectingWS.bind(this);\n                this._connection.onopen = this._onOpenWS.bind(this);\n                this._connection.onerror = this._onErrorWS.bind(this);\n                this._connection.onmessage = this._onMessageWS.bind(this);\n                this._connection.onclose = this._onCloseWS.bind(this);\n            }\n            return this._connection;\n        },\n\n        setAuthData: function(data){\n            this._authData = data;\n        },\n\n        abort: function(){\n            this._connection.onconnecting = function(event) {};\n            this._connection.onopen = function(event) {};\n            this._connection.onerror = function(event) {};\n            this._connection.onmessage = function(event) {};\n            this._connection.onclose = function(event) {};\n\n            this._connection.close();\n            this._connection = null;\n\n            this._isConnected = false;\n            this._isAuthorized = false;\n        },\n\n        isInstalled: function() {\n            return this._isInstalled;\n        },\n\n        isConnected: function() {\n            return this._isConnected;\n        },\n\n        isAuthorized: function() {\n            return this._isAuthorized;\n        },\n\n        isReady: function(){\n            if(this.isInstalled() && this.isConnected() && this.isAuthorized()){\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Initiates reconnection to WIService\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        reconnect: function(){\n            this.getConnection().refresh();\n        },\n\n        /**\n         * Open connection to the WIService.\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        connect: function(){\n            this.getConnection().open();\n        },\n\n        send: function(message, callback, timeout) {\n            if(!this.isConnected()){\n                return;\n            }\n            if(!message){\n                return;\n            }\n            if(!message.hasOwnProperty('message')){\n                message = _.extend({}, {\n                    message: 'E_' + this._authData.app\n                }, message);\n            }\n\n            if(!message.hasOwnProperty('id')){\n                message.id = this._generateID();\n            }\n\n            if(callback){\n                if(timeout === null || typeof timeout === 'undefined' || timeout < 0){\n                    timeout = this._requestTimeout;\n                }\n                this._requestsCallback[message.id] = {\n                    callback: callback,\n                    message: message,\n                    timeoutAt: Date.now() + timeout\n                };\n\n                this._checkRequestTimeout();\n            }\n\n            var requestString = JSON.stringify(message);\n\n            return this.getConnection().send(requestString);\n        },\n\n        _getCurrentPort: function(){\n            return this._connection.url.match(/[^\\d]+(\\d+).*/)[1];\n        },\n\n        _currentCandidat: -1,\n        _connectToNextCandidat: function(){\n            this._currentCandidat++;\n\n            this._getCandidates(function(candidates){\n                if(candidates[this._currentCandidat]){\n                    this.abort();\n                    this.getConnection(candidates[this._currentCandidat]);\n                }else{\n                    this.abort();\n                    this._currentCandidat = 0;\n                    this._candidates = null;\n                }\n            }.bind(this));\n        },\n\n        _candidates: null,\n        _getCandidates: function(callback){\n            callback = callback || function(){};\n\n            if(this._candidates === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'candidates'\n                    }\n                };\n\n                this.send(message, function(response){\n                    if(response && response.candidates){\n                        this._candidates = response.candidates;\n                        callback(this._candidates);\n                    }\n                }.bind(this));\n            }else{\n                callback(this._candidates);\n            }\n        },\n\n        _autorize: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(!this._authData){\n                return null;\n            }\n\n            var message = {\n                'message': 'M_WISERVICE',\n                'msgdata': {\n                    'command': 'authorize',\n                    'msgdata': this._authData\n                }\n            };\n            this.send(message, function(response){\n                if(response && response.status && response.status == 'rejected'){\n                    logger.info('authorization rejected', response);\n                    this._connectToNextCandidat();\n                }else{\n                    window.localStorage.setItem('Wildix.IntegrationService.Port', this._getCurrentPort());\n                    this._isAuthorized = true;\n                    this._ready();\n                }\n            }.bind(this));\n        },\n\n        _ready: function(){\n            this.trigger('ready', this);\n        },\n\n        _checkRequestTimeout: function(){\n            if (!this._requestTimer){\n                this._requestTimer = setInterval(function(){\n                    for (var messageId in this._requestsCallback){\n                        if (this._requestsCallback.hasOwnProperty(messageId)){\n                            var request = this._requestsCallback[messageId];\n                            if (request.timeoutAt && request.timeoutAt <= Date.now()){\n                                this.trigger('requesttimeout', request);\n                                delete this._requestsCallback[messageId];\n                            }\n                        }\n                    }\n                }.bind(this), 100);\n            }\n        },\n\n        _generateID: function(len) {\n            if(!len){\n                len = 32;\n            }\n            var text = '';\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n            for(var i = 0; i < len; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n\n            return text;\n        },\n\n        _onConnectingWS: function(event) {\n            this._isConnected = false;\n            this.trigger('connecting', this);\n        },\n\n        _onOpenWS: function(event) {\n            this._isInstalled = true;\n            this._isConnected = true;\n            this.getConnection().maxReconnectAttempts = null;\n            this.trigger('connected', this);\n            this._autorize();\n        },\n\n        _onErrorWS: function(event, dd) {\n            if(this._candidates === null && this._defaultPort[this._currentDefaultPortIndex + 1]){\n                // if first connected and have next default port\n                if(this._getCurrentPort() == this._defaultPort[this._currentDefaultPortIndex]){\n                    // if port is default, then connect to the next default port\n                    this._currentDefaultPortIndex++;\n                }\n                this.abort();\n                this.getConnection();\n            }else{\n                this.abort();\n                this.trigger('error', this);\n            }\n        },\n\n        _onMessageWS: function(event) {\n            var message = null;\n            if(event.hasOwnProperty('data') && event.data){\n                try{\n                    message = JSON.parse(event.data);\n                }catch(e){\n                    logger.error('Bad message', e);\n                }\n            }\n            if(message && message.hasOwnProperty('message')){\n                switch (message.message.substr(0, 2)) {\n                    case 'E_': message.type = 'event';\n                        break;\n                    case 'R_': message.type = 'response';\n                        break;\n                    case 'C_': message.type = 'chunked';\n                        break;\n                    default: message.type = 'message';\n                        break;\n                }\n\n                message.application = message.message.substr(2);\n                message.application = message.application.toLowerCase();\n            }\n\n            if(message && message.hasOwnProperty('id')){\n                if(message.type == 'response' && this._requestsCallback.hasOwnProperty(message.id)){\n                    if(this._requestsCallback[message.id].hasOwnProperty('callback')){\n                        this._requestsCallback[message.id].callback(message.msgdata);\n                    }\n                    delete this._requestsCallback[message.id];\n                }\n            }\n\n            this.trigger(message.type + ':' + message.application, message);\n        },\n\n        _onCloseWS: function(event) {\n            if(this._isConnected){\n                this._isConnected = false;\n                logger.error('WS closed', event);\n                this.trigger('close', this);\n            }\n        }\n    });\n\n    return Connector;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a geographic location of User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Location\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property address {string} Address of this location\n * @property lat {string} Latitude in degrees\n * @property lng {string} Longitude in degrees\n * @example\n * user.get('location').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Location = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Location');\n\n    return Backbone.Model.extend({\n        defaults: {\n            address: '',\n            lat: '',\n            lng: ''\n        },\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a presence of a User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Presence\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property type {string} Type status\n *                        <ul>\n *                            <li>available</li>\n *                            <li>unavailable</li>\n *                        </ul>\n * @property show {string} Main status\n *                              <ul>\n *                                  <li>available</li>\n *                                  <li>dnd</li>\n *                                  <li>away</li>\n *                                  <li>mur</li>\n *                              </ul>\n * @property status {string} Status message.\n * @property deviceShow {string} Device state\n *                              <ul>\n *                                  <li>ringing</li>\n *                                  <li>talking</li>\n *                                  <li>rt</li>\n *                                  <li>registered</li>\n *                              </ul>\n * @property until {string} Expire date - a date when this presence are valid.\n * @example\n * user.get('presence').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Presence = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n    var logger = Logger.get('Presence');\n\n    return Backbone.Model.extend({\n        defaults: {\n            type: 'unavailable', // available || unavailable\n            show: '',  // dnd || away || available\n            status: '',\n            deviceShow: '', // ringing || talking || rt\n            until: '' // Date\n        },\n\n        initialize: function() {\n            logger.info('initialize');\n        },\n\n        isAvailable: function(){\n            if(this.get('type') == 'available'){\n                return true;\n            }\n            return false;\n        },\n\n        isUnavailable: function(){\n            if(this.get('type') == 'unavailable'){\n                return true;\n            }\n            return false;\n        },\n\n        getFormattedUntil: function(){\n            if(this.get('until') && this.get('until') != ''){\n                return this.get('until').format('dd/mm/yyyy HH:MM');\n            }\n            return '';\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a user that are participated in Wildix PBX.\n *\n * @class User\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property email {string}\n * @property extension {string} Can be empty when user doesn't have extension, for example user from Kite service.\n * @property faxNumber {string}\n * @property id {string}\n * @property language {string}\n * @property mobilePhone {string}\n * @property name {string}\n * @property officePhone {string}\n * @property picture {string} Url to the picture of the user\n * @property presence {Wildix.Models.Presence}\n * @property location {Wildix.Models.Location}\n * @property call {Wildix.Models.Call}\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(2), __webpack_require__(0),\n                __webpack_require__(12), __webpack_require__(11),\n                __webpack_require__(4)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone', 'Models/Presence', 'Models/Location', 'Models/Call'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.User = factory(\n                root.underscore,\n                root.Backbone,\n                root.Models.Presence,\n                root.Models.Location,\n                root.Models.Call\n        );\n    }\n}(this, function (_, Backbone, Presence, Location, Call){\n    'use strict';\n    var logger = Logger.get('User');\n\n    var User = Backbone.Model.extend({\n\n        composite: {\n            presence: Presence,\n            call: Call,\n            location: Location\n        },\n\n        defaults: {\n            email: '',\n            extension: '',\n            faxNumber: '',\n            id: '',\n            language: '',\n            mobilePhone: '',\n            name: '',\n            officePhone: '',\n            picture: '',\n            presence: null,\n            location: null,\n            call: null\n        },\n\n        idAttribute: 'id',\n\n        initialize: function(data, options) {\n            logger.info('initialize');\n\n            this.makeComposite(options);\n        }\n    });\n\n    Backbone.mixinCompositeModel(User.prototype);\n\n    return User;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * The Backbone namespace.\n *\n *\n * @external Backbone\n * @see {@link http://backbonejs.org/|Backbone}\n */\n\n/**\n * The Backbone collection class.\n *\n * @class Collection\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Collection|Backbone.Collection}\n */\n\n/**\n * The Backbone model class.\n *\n * @class Model\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Model|Backbone.Model}\n */\n\n/**\n * The Backbone events class.\n *\n * @class Events\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Events|Backbone.Events}\n */\n\n/**\n * The Wildix namespace.\n *\n * @namespace Wildix\n */\n\n/**\n * The Models namespace.\n *\n * @namespace Models\n * @memberof Wildix\n */\n\n__webpack_require__(9);\n\n__webpack_require__(7);\n__webpack_require__(6);\n__webpack_require__(8);\n\nif (true){\n    module.exports = __webpack_require__(3);\n}else{\n    require('IntegrationService');\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module !== 'undefined' && module.exports){\n        module.exports = factory();\n    } else {\n        global.ReconnectingWebSocket = factory();\n    }\n})(this, function () {\n\n    if (!('WebSocket' in window)) {\n        return;\n    }\n\n    function ReconnectingWebSocket(url, protocols, options) {\n\n        // Default settings\n        var settings = {\n\n            /** Whether this instance should log debug messages. */\n            debug: false,\n\n            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n            automaticOpen: true,\n\n            /** The number of milliseconds to delay before attempting to reconnect. */\n            reconnectInterval: 1000,\n            /** The maximum number of milliseconds to delay a reconnection attempt. */\n            maxReconnectInterval: 30000,\n            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n            reconnectDecay: 1.5,\n\n            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n            timeoutInterval: 2000,\n\n            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n            maxReconnectAttempts: null\n        }\n        if (!options) { options = {}; }\n\n        // Overwrite and define settings with options if they exist.\n        for (var key in settings) {\n            if (typeof options[key] !== 'undefined') {\n                this[key] = options[key];\n            } else {\n                this[key] = settings[key];\n            }\n        }\n\n        // These should be treated as read-only properties\n\n        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n        this.url = url;\n\n        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n        this.reconnectAttempts = 0;\n\n        /**\n         * The current state of the connection.\n         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n         * Read only.\n         */\n        this.readyState = WebSocket.CONNECTING;\n\n        /**\n         * A string indicating the name of the sub-protocol the server selected; this will be one of\n         * the strings specified in the protocols parameter when creating the WebSocket object.\n         * Read only.\n         */\n        this.protocol = null;\n\n        // Private state variables\n\n        var self = this;\n        var ws;\n        var forcedClose = false;\n        var timedOut = false;\n        var eventTarget = document.createElement('div');\n\n        // Wire up \"on*\" properties as event handlers\n\n        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\n        // Expose the API required by EventTarget\n\n        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n        /**\n         * This function generates an event that is compatible with standard\n         * compliant browsers and IE9 - IE11\n         *\n         * This will prevent the error:\n         * Object doesn't support this action\n         *\n         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n         * @param s String The name that the event should use\n         * @param args Object an optional object that the event will use\n         */\n        function generateEvent(s, args) {\n        \tvar evt = document.createEvent(\"CustomEvent\");\n        \tevt.initCustomEvent(s, false, false, args);\n        \treturn evt;\n        };\n\n        this.open = function (reconnectAttempt) {\n            ws = new WebSocket(self.url, protocols || []);\n\n            if (reconnectAttempt) {\n                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n                    return;\n                }\n            } else {\n                eventTarget.dispatchEvent(generateEvent('connecting'));\n                this.reconnectAttempts = 0;\n            }\n\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n            }\n\n            var localWs = ws;\n            var timeout = setTimeout(function() {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n                }\n                timedOut = true;\n                localWs.close();\n                timedOut = false;\n            }, self.timeoutInterval);\n\n            ws.onopen = function(event) {\n                clearTimeout(timeout);\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n                }\n                self.protocol = ws.protocol;\n                self.readyState = WebSocket.OPEN;\n                self.reconnectAttempts = 0;\n                var e = generateEvent('open');\n                e.isReconnect = reconnectAttempt;\n                reconnectAttempt = false;\n                eventTarget.dispatchEvent(e);\n            };\n\n            ws.onclose = function(event) {\n                clearTimeout(timeout);\n                ws = null;\n                if (forcedClose) {\n                    self.readyState = WebSocket.CLOSED;\n                    eventTarget.dispatchEvent(generateEvent('close'));\n                } else {\n                    self.readyState = WebSocket.CONNECTING;\n                    var e = generateEvent('connecting');\n                    e.code = event.code;\n                    e.reason = event.reason;\n                    e.wasClean = event.wasClean;\n                    eventTarget.dispatchEvent(e);\n                    if (!reconnectAttempt && !timedOut) {\n                        if (self.debug || ReconnectingWebSocket.debugAll) {\n                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n                        }\n                        eventTarget.dispatchEvent(generateEvent('close'));\n                    }\n\n                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n                    setTimeout(function() {\n                        self.reconnectAttempts++;\n                        self.open(true);\n                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n                }\n            };\n            ws.onmessage = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n                }\n                var e = generateEvent('message');\n                e.data = event.data;\n                eventTarget.dispatchEvent(e);\n            };\n            ws.onerror = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n                }\n                eventTarget.dispatchEvent(generateEvent('error'));\n            };\n        }\n\n        // Whether or not to create a websocket upon instantiation\n        if (this.automaticOpen == true) {\n            this.open(false);\n        }\n\n        /**\n         * Transmits data to the server over the WebSocket connection.\n         *\n         * @param data a text string, ArrayBuffer or Blob to send to the server.\n         */\n        this.send = function(data) {\n            if (ws) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n                }\n                return ws.send(data);\n            } else {\n                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n            }\n        };\n\n        /**\n         * Closes the WebSocket connection or connection attempt, if any.\n         * If the connection is already CLOSED, this method does nothing.\n         */\n        this.close = function(code, reason) {\n            // Default CLOSE_NORMAL code\n            if (typeof code == 'undefined') {\n                code = 1000;\n            }\n            forcedClose = true;\n            if (ws) {\n                ws.close(code, reason);\n            }\n        };\n\n        /**\n         * Additional public API method to refresh the connection if still open (close, re-open).\n         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n         */\n        this.refresh = function() {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }\n\n    /**\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n     * this indicates that the connection is ready to send and receive data.\n     */\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n    /** An event listener to be called when a connection begins being attempted. */\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n    /** An event listener to be called when a message is received from the server. */\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n    /** An event listener to be called when an error occurs. */\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    /**\n     * Whether all instances of ReconnectingWebSocket should log debug messages.\n     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n     */\n    ReconnectingWebSocket.debugAll = false;\n\n    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n    return ReconnectingWebSocket;\n});\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Wildix.IntegrationService.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b4d5ee10ed9ca5bb9d4","//     Backbone.js 1.4.0\n\n//     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n        .replace(optionalParam, '(?:$1)?')\n        .replace(namedParam, function(match, optional) {\n          return optional ? match : '([^/?]+)';\n        })\n        .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/backbone/backbone.js\n// module id = 0\n// module chunks = 0 1","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 1\n// module chunks = 0 1","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/underscore/underscore.js\n// module id = 2\n// module chunks = 0 1","/**\n * Represents a Wildix IntegrationService instance\n *\n * @class IntegrationService\n * @memberof Wildix\n * @extends external:Backbone.Events\n *\n * @param options {Object} options\n *\n * @example\n * var WIService = new Wildix.IntegrationService({\n *   name: \"MySomeApplication\",\n *   version: '1.0.0'\n * }\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('Logger'), require('underscore'), require('backbone'), require('Connector'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['Logger', 'underscore', 'backbone', 'Connector'], factory);\n    } else {\n        // Browser\n        root.IntegrationService = factory(root.Logger, root.underscore, root.Backbone, root.Connector);\n    }\n}(this, function (Logger, _, Backbone, Connector){\n    'use strict';\n    // enable all logs\n    // Wildix.IntegrationService.Logger.setLevel(Wildix.IntegrationService.Logger.DEBUG)\n    // Logger.useDefaults();\n    // Logger.setLevel(Logger.DEBUG);  // Global logging level.\n\n    var logger = Logger.get('IntegrationService');\n\n    function IntegrationService(options){\n        this.initialize(options);\n    }\n\n    IntegrationService.Logger = Logger;\n\n    IntegrationService.Modules = {};\n\n    IntegrationService.addModule = function(name, module){\n        IntegrationService.Modules[name] = module;\n    };\n\n    _.extend(IntegrationService.prototype, Backbone.Events, {\n        _options: {\n            app: 'APP_WEBCRM',\n            name: 'WebCRM',\n            version: '0.0.1',\n            userAgent: navigator.userAgent,\n            platform: navigator.platform\n        },\n\n        _connectionOptions: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDelay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _connection: null,\n\n        _macComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _winComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _version: null,\n\n        initialize: function(options){\n            logger.info('Initialize Integration service', options);\n\n            _.extend(this._options, options);\n\n            this._options.app = 'APP_' + this._options.name.toUpperCase();\n\n            for (var key in IntegrationService.Modules) {\n                logger.info('Build module:', key);\n                if(typeof IntegrationService.Modules[key] === 'object'){\n                    var Module = function(){};\n                    Module.prototype = IntegrationService.Modules[key];\n\n                    this[key] = new Module();\n                    this[key].initialize(this);\n                }else{\n                    this[key] = new IntegrationService.Modules[key](this);\n                }\n            }\n\n            this.getConnection().on('ready', this._onReady, this);\n            this.getConnection().on('event:wiservice', this._onEventWiservice, this);\n            this.getConnection().on('message:' + this._options.app.toLowerCase(), this._onMessage, this);\n            this.getConnection().on('error', this._onConnectionError, this);\n        },\n\n        /**\n         * Plugin that provides Roster functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Roster}\n         */\n        Roster: null,\n\n        /**\n         * Plugin that provides Telephony functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Telephony}\n         */\n        Telephony: null,\n\n        /**\n         * Plugin that provides Chat functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Chat}\n         */\n        Chat: null,\n\n        /**\n         * Return connection to WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {Wildix.Connector}\n         */\n        getConnection: function() {\n            if(this._connection === null){\n                this._connection = new Connector(this._connectionOptions);\n                this._connection.setAuthData(this._options);\n            }\n            return this._connection;\n        },\n\n        _ready: false,\n\n        /**\n         * Return true if fully initialized connection with WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isReady: function(){\n            return this._ready;\n        },\n\n        _onReady: function(){\n            this._getVersion();\n        },\n\n        _countCollaborationss: 0,\n        _onEventWiservice: function(data){\n            logger.info('_onEventWiservice', data);\n            if(data && data.msgdata){\n                if(data.msgdata.type == 'connectionstatus'){\n                    if(data.msgdata.disconnected && data.msgdata.disconnected.collaboration){\n                        // maybe disconnected\n                        if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                            // have another collaboration connection\n                        }else{\n                            this._collaborationStatus = 'disconnected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }else if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        if(this._countCollaborations != data.msgdata.connected.collaboration.length){\n                            this._collaborationStatus = 'connected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }\n\n                    this._countCollaborations = 0;\n                    if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        this._countCollaborations = data.msgdata.connected.collaboration.length;\n                    }\n                }\n            }\n        },\n\n        _onMessage: function(data){\n            this.trigger(data.msgdata.command, data.msgdata.msgdata);\n        },\n\n        _onConnectionError: function(){\n            this.trigger('connection:error', this);\n        },\n\n        /**\n         * Return true if IntegrationService connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isConnected: function(){\n            return this.getConnection().isConnected();\n        },\n\n        _collaborationStatus: null,\n\n        /**\n         * Return collaboration status or null if IntegrationService not connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {string|null}\n         */\n        getCollaborationStatus: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n            if(this._collaborationStatus === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getconnectionstatus'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    logger.info('collaboration status', response);\n                    var connected = response.connected || {};\n                    if(connected.collaboration && connected.collaboration.length > 0){\n                        this._collaborationStatus = 'connected';\n                        this._countCollaborations = response.connected.collaboration.length;\n                        this.trigger('collaboration:' + this._collaborationStatus, this);\n                        this._ready = true;\n                        this.trigger('ready', this);\n                    }\n                }.bind(this));\n            }\n            return this._collaborationStatus;\n        },\n\n        /**\n         * Return collaboration version.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @private\n         * @param {string} name of app\n         * @param {bollean} force request version\n         * @return {string}\n         */\n        _getVersion: function(name, force){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(this._version === null || force){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getversion'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    if(response && response.wiservice){\n                        this._version = response;\n                        this.getCollaborationStatus();\n                    }\n                }.bind(this));\n            }\n\n            if(name){\n                if(this._version && this._version.hasOwnProperty(name) && this._version[name]){\n                    return this._version[name];\n                }\n                return null;\n            }\n            return this._version;\n        }\n    });\n\n    return IntegrationService;\n}));\n\n/**\n * Indicates that could not connect to WIService.\n *\n * @event Wildix.IntegrationService#connection:error\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('connection:error', function(){\n *   console.warn('WIService not installed or is not running');\n * });\n */\n\n/**\n * Indicates that collaboration is connected and IntegrationService received status.\n *\n * @event Wildix.IntegrationService#ready\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('ready', function(){\n *   var status = WIService.getCollaborationStatus();\n *   if(status == 'disconnected'){\n *       console.warn('Collaboration not running');\n *   }\n * });\n */\n\n/**\n * Indicates that Collaboration is connected to WIService.\n *\n * @event Wildix.IntegrationService#collaboration:connected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:connected', function(){\n *   console.log('Collaboration connected');\n * });\n */\n\n/**\n * Indicates that Collaboration is disconnected from the WIService.\n *\n * @event Wildix.IntegrationService#collaboration:disconnected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:disconnected', function(){\n *   console.log('Collaboration disconnected');\n * });\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./IntegrationService.js\n// module id = 3\n// module chunks = 0 1","/**\n * Represents call information.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.<br />\n * Used in Telephony plugin and can be received from {@link Wildix.Telephony}.\n *\n * @class Call\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property name {string} name of the connected call.\n * @property number {string} number of the connected call.\n * @property channel {string}\n * @property destination {string}\n * @property destinationType {string}\n * @property direction {string}\n * @property duration {string}\n * @property id {string}\n * @property record {string}\n * @property state {string}\n * @property type {string}\n * @example\n * user.get('call').get(property)\n * or\n * call.get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Call = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Call');\n\n    return Backbone.Model.extend({\n        defaults: {\n            name: '',\n            number: '',\n            channel: '',\n            destination: '',\n            destinationType: '',\n            direction: '',\n            duration: '',\n            id: '',\n            record: '',\n            state: '',\n            type: ''\n        },\n        idAttribute: 'channel',\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Call.js\n// module id = 4\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/global.js\n// module id = 5\n// module chunks = 0 1","/**\n * A plugin that provides Chat functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Chat|Chat} property.\n *\n * @class Chat\n * @memberof Wildix\n * @extends external:Backbone.Events\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('IntegrationService'), require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone'], factory);\n    } else if (typeof EventEmitter !== 'undefined'){\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone);\n    }\n}(this, function (IntegrationService, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Chat');\n\n    IntegrationService.addModule('Chat', _.extend({}, Backbone.Events, {\n\n        _integrationService: null,\n        _connection: null,\n\n        initialize: function(IS){\n            logger.info('Initialize');\n\n            this._integrationService = IS;\n            this._connection = this._integrationService.getConnection();\n        },\n\n        /**\n         * Initiates a open chat to a specified extension.\n         *\n         * @example\n         * WIService.Chat.open('101');\n         *\n         * @memberof Wildix.Chat#\n         * @param {string} number  A number to open chat.\n         * @return {void}\n         */\n        open: function(number){\n            var message = {\n                'msgdata': {\n                    'type': 'chat',\n                    'number': number\n                }\n            };\n            this._connection.send(message);\n        }\n\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Chat.js\n// module id = 6\n// module chunks = 0 1","/**\n * A plugin that provides Roster functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Roster|Roster} property.\n *\n * @class Roster\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Roster.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('IntegrationService'),\n                require('underscore'),\n                require('backbone'),\n                require('Models/User')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/User'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.User);\n    }\n}(this, function (IntegrationService, _, Backbone, User){\n    'use strict';\n    var logger = Logger.get('Roster');\n\n    IntegrationService.addModule('Roster', Backbone.Collection.extend({\n        model: User,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(IS){\n            logger.info('initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setroster', this._onSetRoster, this);\n            this._integrationService.on('updateuser', this._onUpdateUser, this);\n            this._integrationService.on('removeuser', this._onRemoveUser, this);\n            this._integrationService.on('adduser', this._onAddUser, this);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a roster event.\n         *\n         * @memberof Wildix.Roster#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to roster events\n         *\n         * @memberof Wildix.Roster#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'roster'\n                    }\n                };\n\n                this._connection.send(message);\n            }\n        },\n\n        _prepareUser: function(item){\n            var user = _.clone(item);\n            user.location = item.presence.extra.location;\n            user.call = item.presence.extra.call;\n            user.presence = {\n                type: item.presence.type,\n                show: item.presence.show,\n                status: item.presence.status,\n                deviceShow: item.presence.extra['device-show'],\n                until: item.presence.until\n            };\n\n            return user;\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetRoster: function(roster){\n            logger.info('Received roster:', roster);\n            var newRoster = [];\n            for(var i = 0; i < roster.length; i++){\n                newRoster.push(this._prepareUser(roster[i]));\n            }\n            this.reset(newRoster);\n        },\n\n        _onUpdateUser: function(user){\n            logger.info('Update user:', user);\n            var item = this.get(user.id);\n            if(item){\n                item.set(this._prepareUser(user));\n            }\n        },\n\n        _onRemoveUser: function(user){\n            logger.info('Removed user:', user);\n            var item = this.get(user.id);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddUser: function(user){\n            logger.info('Added user:', user);\n\n            if(!this.get(user.id)){\n                this.add(this._prepareUser(user));\n            }\n        }\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Roster.js\n// module id = 7\n// module chunks = 0 1","/**\n * A plugin that provides Telephony functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Telephony|Telephony} property.\n *\n * @class Telephony\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Telephony.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('IntegrationService'),\n                require('underscore'),\n                require('backbone'),\n                require('Models/Call')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/Call'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.Call);\n    }\n}(this, function (IntegrationService, _, Backbone, Call){\n    'use strict';\n    var logger = Logger.get('Telephony');\n\n    IntegrationService.addModule('Telephony', Backbone.Collection.extend({\n        model: Call,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(){\n            logger.info('Initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setcalls', this._onSetCalls, this);\n            this._integrationService.on('updatecall', this._onUpdateCall, this);\n            this._integrationService.on('removecall', this._onRemoveCall, this);\n            this._integrationService.on('addcall', this._onAddCall, this);\n        },\n\n        /**\n         * Initiates a call to a specified number.\n         *\n         * @example\n         * WIService.Telephony.call('101');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} number A number to call.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        call: function(number, callback){\n            this._sendMessage('call', {'number': number}, callback);\n        },\n\n        /**\n         * Initiates an answer to the call for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.answer('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        answer: function(channel, callback){\n            this._sendMessage('answer', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call hangup for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.hangup('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        hangup: function(channel, callback){\n            this._sendMessage('hangup', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call hold for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.hold('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        hold: function(channel, callback){\n            this._sendMessage('hold', {'channel': channel}, callback);\n        },\n\n        /**\n         * Initiates a call unhold for the specified channel.\n         *\n         * @example\n         * WIService.Telephony.unhold('SIP/108-00000050');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} channel A call channel.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        unhold: function(channel, callback){\n            this._sendMessage('unhold', {'channel': channel}, callback);\n        },\n\n        _sendMessage: function(type, data, callback){\n            var message = {\n                'msgdata': {\n                    'type': type\n                }\n            };\n            _.extend(message.msgdata, data);\n            this._connection.send(message, callback);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a call event.\n         *\n         * @memberof Wildix.Telephony#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to call events\n         *\n         * @memberof Wildix.Telephony#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n                this._sendMessage('subscribe', {'event': 'calls'});\n            }\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetCalls: function(calls){\n            logger.info('Received calls:', calls);\n\n            this.reset(calls);\n        },\n\n        _onUpdateCall: function(call){\n            logger.info('Update call:', call);\n            var item = this.get(call.channel);\n\n            if (!item) {\n                return;\n            }\n\n            item.set(call);\n\n            if (call.state === 'up') {\n                var previousState = item.previousAttributes().state;\n\n                if (previousState === 'ring' && call.direction === 'incoming') {\n                    this.trigger('answer', call);\n                } else if (previousState === 'hold') {\n                    this.trigger('unhold', call);\n                }\n            } else if (call.state === 'hold') {\n                this.trigger('hold', call);\n            }\n        },\n\n        _onRemoveCall: function(call){\n            logger.info('Removed call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                this.remove(item);\n                this.trigger('hangup', call);\n            }\n        },\n\n        _onAddCall: function(call){\n            logger.info('Added call:', call);\n            if(!this.get(call.channel)){\n                this.add(call);\n            }\n        }\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Telephony.js\n// module id = 8\n// module chunks = 0 1","/**\n * idea from https://github.com/prantlf/backbone.composite-model\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone'], factory);\n    } else {\n        // Browser\n        factory(root.underscore, root.Backbone);\n    }\n}(this, function (_, Backbone){\n    'use strict';\n\n    Backbone.mixinCompositeModel = function (prototype) {\n        var originalSet = prototype.set;\n        var originalToJSON = prototype.toJSON;\n\n        return _.extend(prototype, {\n\n            makeComposite: function (options) {\n                for(var property in this.composite){\n                    this.get(property).on('all', this._triggerChildEvent.bind(this, property), this);\n                }\n            },\n\n            // Overriding set\n            set: function(attributes, options) {\n                for(var property in this.composite){\n                    if(attributes[property]){\n                        var propertyModel = this.get(property);\n                        if(propertyModel){\n                            propertyModel.set(attributes[property], options);\n                            delete attributes[property];\n                        }else{\n                            attributes[property] = new this.composite[property](attributes[property]);\n                        }\n                    }\n                }\n\n                return originalSet.call(this, attributes, options);\n            },\n\n            _triggerChildEvent: function(){\n                var property = arguments[0];\n                var args = Array.from(arguments);\n                args = args.slice(1);\n\n                args[0] = args[0].split(':');\n                args[0].splice(1, 0, property);\n                args[0] = args[0].join(':');\n\n                args.splice(1, 0, this);\n                this.trigger.apply(this, args);\n                if(arguments[1] == 'change'){\n                    this.trigger('change', this, args[args.length - 1]);\n                }\n            },\n\n            // Overrides the `Backbone.Model:toJSON()` method to ensure that the\n            // up-to-date nested attribute values will be present in the result\n            toJSON: function(options) {\n                var result = originalToJSON.call(this, options);\n                for(var property in this.composite){\n                    var child = this.get(property);\n                    if (child) {\n                        result[property] = child.toJSON();\n                    }\n                }\n                return result;\n            }\n        });\n    };\n\n    return Backbone.mixinCompositeModel;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/backbone.mixinCompositeModel.js\n// module id = 9\n// module chunks = 0 1","/**\n * Provides connectivity to WIService\n *\n * @class Connector\n * @memberof Wildix\n * @extends external:Backbone.Events\n * @param options {Object} options\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('ReconnectingWebSocket'), require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['ReconnectingWebSocket', 'underscore', 'backbone'], factory);\n    } else if (typeof ReconnectingWebSocket !== 'undefined' && typeof ReconnectingWebSocket !== 'undefined'){\n        // Browser\n        root.Connector = factory(root.ReconnectingWebSocket, root.underscore, root.Backbone);\n    }\n}(this, function (ReconnectingWebSocket, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Connector');\n\n    function Connector(options){\n        this.initialize(options);\n    }\n\n    _.extend(Connector.prototype, Backbone.Events, {\n\n        _options: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDecay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _authData: null,\n\n        _connection: null,\n        _requestsCallback: {},\n\n        _isInstalled: false,\n        _isConnected: false,\n        _isAuthorized: false,\n\n        _requestTimeout: 120000,\n        _requestTimer: null,\n\n        _currentDefaultPortIndex: 0,\n        _defaultPort: [8888, 8889, 8890],\n\n        initialize: function(options){\n            logger.info('Initialize', options);\n\n            _.extend(this._options, options);\n\n            var port = window.localStorage.getItem('Wildix.IntegrationService.Port');\n            if(port){\n                this.getConnection(port);\n            }else{\n                this.getConnection();\n            }\n        },\n\n        getConnection: function(port) {\n            if(!port){\n                port = this._defaultPort[this._currentDefaultPortIndex];\n            }\n            if(this._connection === null){\n                var host = 'wss://wildixintegration.eu:' + port + '/';\n                this._connection = new ReconnectingWebSocket(host, null, this._options);\n\n                this._connection.onconnecting = this._onConnectingWS.bind(this);\n                this._connection.onopen = this._onOpenWS.bind(this);\n                this._connection.onerror = this._onErrorWS.bind(this);\n                this._connection.onmessage = this._onMessageWS.bind(this);\n                this._connection.onclose = this._onCloseWS.bind(this);\n            }\n            return this._connection;\n        },\n\n        setAuthData: function(data){\n            this._authData = data;\n        },\n\n        abort: function(){\n            this._connection.onconnecting = function(event) {};\n            this._connection.onopen = function(event) {};\n            this._connection.onerror = function(event) {};\n            this._connection.onmessage = function(event) {};\n            this._connection.onclose = function(event) {};\n\n            this._connection.close();\n            this._connection = null;\n\n            this._isConnected = false;\n            this._isAuthorized = false;\n        },\n\n        isInstalled: function() {\n            return this._isInstalled;\n        },\n\n        isConnected: function() {\n            return this._isConnected;\n        },\n\n        isAuthorized: function() {\n            return this._isAuthorized;\n        },\n\n        isReady: function(){\n            if(this.isInstalled() && this.isConnected() && this.isAuthorized()){\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Initiates reconnection to WIService\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        reconnect: function(){\n            this.getConnection().refresh();\n        },\n\n        /**\n         * Open connection to the WIService.\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        connect: function(){\n            this.getConnection().open();\n        },\n\n        send: function(message, callback, timeout) {\n            if(!this.isConnected()){\n                return;\n            }\n            if(!message){\n                return;\n            }\n            if(!message.hasOwnProperty('message')){\n                message = _.extend({}, {\n                    message: 'E_' + this._authData.app\n                }, message);\n            }\n\n            if(!message.hasOwnProperty('id')){\n                message.id = this._generateID();\n            }\n\n            if(callback){\n                if(timeout === null || typeof timeout === 'undefined' || timeout < 0){\n                    timeout = this._requestTimeout;\n                }\n                this._requestsCallback[message.id] = {\n                    callback: callback,\n                    message: message,\n                    timeoutAt: Date.now() + timeout\n                };\n\n                this._checkRequestTimeout();\n            }\n\n            var requestString = JSON.stringify(message);\n\n            return this.getConnection().send(requestString);\n        },\n\n        _getCurrentPort: function(){\n            return this._connection.url.match(/[^\\d]+(\\d+).*/)[1];\n        },\n\n        _currentCandidat: -1,\n        _connectToNextCandidat: function(){\n            this._currentCandidat++;\n\n            this._getCandidates(function(candidates){\n                if(candidates[this._currentCandidat]){\n                    this.abort();\n                    this.getConnection(candidates[this._currentCandidat]);\n                }else{\n                    this.abort();\n                    this._currentCandidat = 0;\n                    this._candidates = null;\n                }\n            }.bind(this));\n        },\n\n        _candidates: null,\n        _getCandidates: function(callback){\n            callback = callback || function(){};\n\n            if(this._candidates === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'candidates'\n                    }\n                };\n\n                this.send(message, function(response){\n                    if(response && response.candidates){\n                        this._candidates = response.candidates;\n                        callback(this._candidates);\n                    }\n                }.bind(this));\n            }else{\n                callback(this._candidates);\n            }\n        },\n\n        _autorize: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(!this._authData){\n                return null;\n            }\n\n            var message = {\n                'message': 'M_WISERVICE',\n                'msgdata': {\n                    'command': 'authorize',\n                    'msgdata': this._authData\n                }\n            };\n            this.send(message, function(response){\n                if(response && response.status && response.status == 'rejected'){\n                    logger.info('authorization rejected', response);\n                    this._connectToNextCandidat();\n                }else{\n                    window.localStorage.setItem('Wildix.IntegrationService.Port', this._getCurrentPort());\n                    this._isAuthorized = true;\n                    this._ready();\n                }\n            }.bind(this));\n        },\n\n        _ready: function(){\n            this.trigger('ready', this);\n        },\n\n        _checkRequestTimeout: function(){\n            if (!this._requestTimer){\n                this._requestTimer = setInterval(function(){\n                    for (var messageId in this._requestsCallback){\n                        if (this._requestsCallback.hasOwnProperty(messageId)){\n                            var request = this._requestsCallback[messageId];\n                            if (request.timeoutAt && request.timeoutAt <= Date.now()){\n                                this.trigger('requesttimeout', request);\n                                delete this._requestsCallback[messageId];\n                            }\n                        }\n                    }\n                }.bind(this), 100);\n            }\n        },\n\n        _generateID: function(len) {\n            if(!len){\n                len = 32;\n            }\n            var text = '';\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n            for(var i = 0; i < len; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n\n            return text;\n        },\n\n        _onConnectingWS: function(event) {\n            this._isConnected = false;\n            this.trigger('connecting', this);\n        },\n\n        _onOpenWS: function(event) {\n            this._isInstalled = true;\n            this._isConnected = true;\n            this.getConnection().maxReconnectAttempts = null;\n            this.trigger('connected', this);\n            this._autorize();\n        },\n\n        _onErrorWS: function(event, dd) {\n            if(this._candidates === null && this._defaultPort[this._currentDefaultPortIndex + 1]){\n                // if first connected and have next default port\n                if(this._getCurrentPort() == this._defaultPort[this._currentDefaultPortIndex]){\n                    // if port is default, then connect to the next default port\n                    this._currentDefaultPortIndex++;\n                }\n                this.abort();\n                this.getConnection();\n            }else{\n                this.abort();\n                this.trigger('error', this);\n            }\n        },\n\n        _onMessageWS: function(event) {\n            var message = null;\n            if(event.hasOwnProperty('data') && event.data){\n                try{\n                    message = JSON.parse(event.data);\n                }catch(e){\n                    logger.error('Bad message', e);\n                }\n            }\n            if(message && message.hasOwnProperty('message')){\n                switch (message.message.substr(0, 2)) {\n                    case 'E_': message.type = 'event';\n                        break;\n                    case 'R_': message.type = 'response';\n                        break;\n                    case 'C_': message.type = 'chunked';\n                        break;\n                    default: message.type = 'message';\n                        break;\n                }\n\n                message.application = message.message.substr(2);\n                message.application = message.application.toLowerCase();\n            }\n\n            if(message && message.hasOwnProperty('id')){\n                if(message.type == 'response' && this._requestsCallback.hasOwnProperty(message.id)){\n                    if(this._requestsCallback[message.id].hasOwnProperty('callback')){\n                        this._requestsCallback[message.id].callback(message.msgdata);\n                    }\n                    delete this._requestsCallback[message.id];\n                }\n            }\n\n            this.trigger(message.type + ':' + message.application, message);\n        },\n\n        _onCloseWS: function(event) {\n            if(this._isConnected){\n                this._isConnected = false;\n                logger.error('WS closed', event);\n                this.trigger('close', this);\n            }\n        }\n    });\n\n    return Connector;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Connector.js\n// module id = 10\n// module chunks = 0 1","/**\n * Represents a geographic location of User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Location\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property address {string} Address of this location\n * @property lat {string} Latitude in degrees\n * @property lng {string} Longitude in degrees\n * @example\n * user.get('location').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Location = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Location');\n\n    return Backbone.Model.extend({\n        defaults: {\n            address: '',\n            lat: '',\n            lng: ''\n        },\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Location.js\n// module id = 11\n// module chunks = 0 1","/**\n * Represents a presence of a User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Presence\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property type {string} Type status\n *                        <ul>\n *                            <li>available</li>\n *                            <li>unavailable</li>\n *                        </ul>\n * @property show {string} Main status\n *                              <ul>\n *                                  <li>available</li>\n *                                  <li>dnd</li>\n *                                  <li>away</li>\n *                                  <li>mur</li>\n *                              </ul>\n * @property status {string} Status message.\n * @property deviceShow {string} Device state\n *                              <ul>\n *                                  <li>ringing</li>\n *                                  <li>talking</li>\n *                                  <li>rt</li>\n *                                  <li>registered</li>\n *                              </ul>\n * @property until {string} Expire date - a date when this presence are valid.\n * @example\n * user.get('presence').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Presence = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n    var logger = Logger.get('Presence');\n\n    return Backbone.Model.extend({\n        defaults: {\n            type: 'unavailable', // available || unavailable\n            show: '',  // dnd || away || available\n            status: '',\n            deviceShow: '', // ringing || talking || rt\n            until: '' // Date\n        },\n\n        initialize: function() {\n            logger.info('initialize');\n        },\n\n        isAvailable: function(){\n            if(this.get('type') == 'available'){\n                return true;\n            }\n            return false;\n        },\n\n        isUnavailable: function(){\n            if(this.get('type') == 'unavailable'){\n                return true;\n            }\n            return false;\n        },\n\n        getFormattedUntil: function(){\n            if(this.get('until') && this.get('until') != ''){\n                return this.get('until').format('dd/mm/yyyy HH:MM');\n            }\n            return '';\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Presence.js\n// module id = 12\n// module chunks = 0 1","/**\n * Represents a user that are participated in Wildix PBX.\n *\n * @class User\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property email {string}\n * @property extension {string} Can be empty when user doesn't have extension, for example user from Kite service.\n * @property faxNumber {string}\n * @property id {string}\n * @property language {string}\n * @property mobilePhone {string}\n * @property name {string}\n * @property officePhone {string}\n * @property picture {string} Url to the picture of the user\n * @property presence {Wildix.Models.Presence}\n * @property location {Wildix.Models.Location}\n * @property call {Wildix.Models.Call}\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('underscore'), require('backbone'),\n                require('Models/Presence'), require('Models/Location'),\n                require('Models/Call')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone', 'Models/Presence', 'Models/Location', 'Models/Call'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.User = factory(\n                root.underscore,\n                root.Backbone,\n                root.Models.Presence,\n                root.Models.Location,\n                root.Models.Call\n        );\n    }\n}(this, function (_, Backbone, Presence, Location, Call){\n    'use strict';\n    var logger = Logger.get('User');\n\n    var User = Backbone.Model.extend({\n\n        composite: {\n            presence: Presence,\n            call: Call,\n            location: Location\n        },\n\n        defaults: {\n            email: '',\n            extension: '',\n            faxNumber: '',\n            id: '',\n            language: '',\n            mobilePhone: '',\n            name: '',\n            officePhone: '',\n            picture: '',\n            presence: null,\n            location: null,\n            call: null\n        },\n\n        idAttribute: 'id',\n\n        initialize: function(data, options) {\n            logger.info('initialize');\n\n            this.makeComposite(options);\n        }\n    });\n\n    Backbone.mixinCompositeModel(User.prototype);\n\n    return User;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/User.js\n// module id = 13\n// module chunks = 0 1","/**\n * The Backbone namespace.\n *\n *\n * @external Backbone\n * @see {@link http://backbonejs.org/|Backbone}\n */\n\n/**\n * The Backbone collection class.\n *\n * @class Collection\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Collection|Backbone.Collection}\n */\n\n/**\n * The Backbone model class.\n *\n * @class Model\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Model|Backbone.Model}\n */\n\n/**\n * The Backbone events class.\n *\n * @class Events\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Events|Backbone.Events}\n */\n\n/**\n * The Wildix namespace.\n *\n * @namespace Wildix\n */\n\n/**\n * The Models namespace.\n *\n * @namespace Models\n * @memberof Wildix\n */\n\nrequire('plugins/backbone.mixinCompositeModel');\n\nrequire('Roster');\nrequire('Chat');\nrequire('Telephony');\n\nif (typeof exports == 'object'){\n    module.exports = require('IntegrationService');\n}else{\n    require('IntegrationService');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 14\n// module chunks = 0 1","// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module !== 'undefined' && module.exports){\n        module.exports = factory();\n    } else {\n        global.ReconnectingWebSocket = factory();\n    }\n})(this, function () {\n\n    if (!('WebSocket' in window)) {\n        return;\n    }\n\n    function ReconnectingWebSocket(url, protocols, options) {\n\n        // Default settings\n        var settings = {\n\n            /** Whether this instance should log debug messages. */\n            debug: false,\n\n            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n            automaticOpen: true,\n\n            /** The number of milliseconds to delay before attempting to reconnect. */\n            reconnectInterval: 1000,\n            /** The maximum number of milliseconds to delay a reconnection attempt. */\n            maxReconnectInterval: 30000,\n            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n            reconnectDecay: 1.5,\n\n            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n            timeoutInterval: 2000,\n\n            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n            maxReconnectAttempts: null\n        }\n        if (!options) { options = {}; }\n\n        // Overwrite and define settings with options if they exist.\n        for (var key in settings) {\n            if (typeof options[key] !== 'undefined') {\n                this[key] = options[key];\n            } else {\n                this[key] = settings[key];\n            }\n        }\n\n        // These should be treated as read-only properties\n\n        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n        this.url = url;\n\n        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n        this.reconnectAttempts = 0;\n\n        /**\n         * The current state of the connection.\n         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n         * Read only.\n         */\n        this.readyState = WebSocket.CONNECTING;\n\n        /**\n         * A string indicating the name of the sub-protocol the server selected; this will be one of\n         * the strings specified in the protocols parameter when creating the WebSocket object.\n         * Read only.\n         */\n        this.protocol = null;\n\n        // Private state variables\n\n        var self = this;\n        var ws;\n        var forcedClose = false;\n        var timedOut = false;\n        var eventTarget = document.createElement('div');\n\n        // Wire up \"on*\" properties as event handlers\n\n        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\n        // Expose the API required by EventTarget\n\n        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n        /**\n         * This function generates an event that is compatible with standard\n         * compliant browsers and IE9 - IE11\n         *\n         * This will prevent the error:\n         * Object doesn't support this action\n         *\n         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n         * @param s String The name that the event should use\n         * @param args Object an optional object that the event will use\n         */\n        function generateEvent(s, args) {\n        \tvar evt = document.createEvent(\"CustomEvent\");\n        \tevt.initCustomEvent(s, false, false, args);\n        \treturn evt;\n        };\n\n        this.open = function (reconnectAttempt) {\n            ws = new WebSocket(self.url, protocols || []);\n\n            if (reconnectAttempt) {\n                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n                    return;\n                }\n            } else {\n                eventTarget.dispatchEvent(generateEvent('connecting'));\n                this.reconnectAttempts = 0;\n            }\n\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n            }\n\n            var localWs = ws;\n            var timeout = setTimeout(function() {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n                }\n                timedOut = true;\n                localWs.close();\n                timedOut = false;\n            }, self.timeoutInterval);\n\n            ws.onopen = function(event) {\n                clearTimeout(timeout);\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n                }\n                self.protocol = ws.protocol;\n                self.readyState = WebSocket.OPEN;\n                self.reconnectAttempts = 0;\n                var e = generateEvent('open');\n                e.isReconnect = reconnectAttempt;\n                reconnectAttempt = false;\n                eventTarget.dispatchEvent(e);\n            };\n\n            ws.onclose = function(event) {\n                clearTimeout(timeout);\n                ws = null;\n                if (forcedClose) {\n                    self.readyState = WebSocket.CLOSED;\n                    eventTarget.dispatchEvent(generateEvent('close'));\n                } else {\n                    self.readyState = WebSocket.CONNECTING;\n                    var e = generateEvent('connecting');\n                    e.code = event.code;\n                    e.reason = event.reason;\n                    e.wasClean = event.wasClean;\n                    eventTarget.dispatchEvent(e);\n                    if (!reconnectAttempt && !timedOut) {\n                        if (self.debug || ReconnectingWebSocket.debugAll) {\n                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n                        }\n                        eventTarget.dispatchEvent(generateEvent('close'));\n                    }\n\n                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n                    setTimeout(function() {\n                        self.reconnectAttempts++;\n                        self.open(true);\n                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n                }\n            };\n            ws.onmessage = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n                }\n                var e = generateEvent('message');\n                e.data = event.data;\n                eventTarget.dispatchEvent(e);\n            };\n            ws.onerror = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n                }\n                eventTarget.dispatchEvent(generateEvent('error'));\n            };\n        }\n\n        // Whether or not to create a websocket upon instantiation\n        if (this.automaticOpen == true) {\n            this.open(false);\n        }\n\n        /**\n         * Transmits data to the server over the WebSocket connection.\n         *\n         * @param data a text string, ArrayBuffer or Blob to send to the server.\n         */\n        this.send = function(data) {\n            if (ws) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n                }\n                return ws.send(data);\n            } else {\n                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n            }\n        };\n\n        /**\n         * Closes the WebSocket connection or connection attempt, if any.\n         * If the connection is already CLOSED, this method does nothing.\n         */\n        this.close = function(code, reason) {\n            // Default CLOSE_NORMAL code\n            if (typeof code == 'undefined') {\n                code = 1000;\n            }\n            forcedClose = true;\n            if (ws) {\n                ws.close(code, reason);\n            }\n        };\n\n        /**\n         * Additional public API method to refresh the connection if still open (close, re-open).\n         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n         */\n        this.refresh = function() {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }\n\n    /**\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n     * this indicates that the connection is ready to send and receive data.\n     */\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n    /** An event listener to be called when a connection begins being attempted. */\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n    /** An event listener to be called when a message is received from the server. */\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n    /** An event listener to be called when an error occurs. */\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    /**\n     * Whether all instances of ReconnectingWebSocket should log debug messages.\n     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n     */\n    ReconnectingWebSocket.debugAll = false;\n\n    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n    return ReconnectingWebSocket;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/reconnectingwebsocket/reconnecting-websocket.js\n// module id = 15\n// module chunks = 0 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 16\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 17\n// module chunks = 0 1"],"sourceRoot":""}