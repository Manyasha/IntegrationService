{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///Wildix.IntegrationService.min.js","webpack:///webpack/bootstrap d58419efb09242431010?bcbb","webpack:///../~/backbone/backbone.js?fd44","webpack:///../~/js-logger/src/logger.js?779b","webpack:///../~/underscore/underscore.js?2adb","webpack:///./IntegrationService.js?3d10","webpack:///./Models/Call.js?da9a","webpack:///./Chat.js?48f1","webpack:///./Roster.js?4c1f","webpack:///./Telephony.js?ff72","webpack:///./plugins/backbone.mixinCompositeModel.js?585f","webpack:///./Connector.js?0e39","webpack:///./Models/Location.js?3f38","webpack:///./Models/Presence.js?790b","webpack:///./Models/User.js?b929","webpack:///./index.js?d939","webpack:///../~/reconnectingwebsocket/reconnecting-websocket.js?7ec4","webpack:///../~/webpack/buildin/global.js?62a6","webpack:///external \"jQuery\"?0cb8"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_16__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","self","undefined","_","$","Backbone","apply","previousBackbone","slice","Array","VERSION","noConflict","emulateHTTP","emulateJSON","addMethod","length","method","attribute","iteratee","context","cb","defaultVal","args","arguments","unshift","addUnderscoreMethods","Class","methods","each","instance","isFunction","isObject","_isModel","modelMatcher","isString","model","attrs","matcher","matches","attributes","Events","eventSplitter","eventsApi","events","callback","opts","names","keys","test","split","on","internalOn","obj","listening","_events","onApi","ctx","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","options","handlers","push","off","offApi","listeners","stopListening","ids","remaining","j","handler","_callback","once","onceMap","bind","listenToOnce","map","offer","trigger","Math","max","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","a1","a2","a3","unbind","extend","Model","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","attr","escape","has","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","isEmpty","changedAttributes","diff","old","size","previous","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","error","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","some","index","_removeReference","previousModels","pop","shift","_byId","modelId","where","first","findWhere","Error","sortBy","pluck","create","callbackOpts","indexOf","_onModelEvent","event","prevId","forEach","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","e","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__","__WEBPACK_AMD_DEFINE_FACTORY__","Logger","logHandler","contextualLoggersByNameMap","scope","func","target","defineLogLevel","DEBUG","INFO","TIME","WARN","ERROR","OFF","ContextualLogger","defaultContext","setLevel","filterLevel","log","info","newLevel","getLevel","enabledFor","lvl","debug","warn","time","label","timeEnd","level","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","console","timerLabel","Date","getTime","useDefaults","defaultLevel","createReduce","dir","iterator","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","prop","previousUnderscore","ArrayProto","FuncProto","toString","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","argCount","other","accumulator","identity","Infinity","createAssigner","keysFunc","undefinedOnly","source","baseCreate","MAX_ARRAY_INDEX","pow","results","findKey","list","negate","fromIndex","guard","isFunc","computed","lastComputed","rand","shuffled","random","criteria","left","right","a","b","group","behavior","pass","fail","compact","flatten","input","shallow","strict","startIndex","output","isArguments","len","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","low","high","mid","floor","range","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","setTimeout","throttle","timeout","later","leading","now","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","functions","extendOwn","oiteratee","String","props","tap","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isElement","nodeType","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","join","testRegexp","replaceRegexp","string","unescape","fallback","idCounter","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","_chain","mixin","valueOf","Connector","IntegrationService","logger","Modules","addModule","_options","app","version","userAgent","navigator","platform","_connectionOptions","automaticOpen","reconnectInterval","maxReconnectInterval","reconnectDelay","timeoutInterval","maxReconnectAttempts","_connection","_macComponentVersion","wiservice","_winComponentVersion","_version","toUpperCase","Module","getConnection","_onReady","_onEventWiservice","toLowerCase","_onMessage","_onConnectionError","Roster","Telephony","Chat","setAuthData","_ready","isReady","_getVersion","_countCollaborationss","msgdata","disconnected","collaboration","connected","_collaborationStatus","_countCollaborations","command","isConnected","getCollaborationStatus","message","send","response","force","number","channel","destination","destinationType","direction","duration","record","state","_integrationService","IS","User","_onConnectedCollaboration","_onSetRoster","_onUpdateUser","_onRemoveUser","_onAddUser","_subscribed","isSubscribed","_needSubscribe","subscribe","_subscribe","_prepareUser","user","presence","extra","show","status","deviceShow","until","roster","newRoster","Call","_onSetCalls","_onUpdateCall","_onRemoveCall","_onAddCall","calls","mixinCompositeModel","originalSet","originalToJSON","makeComposite","composite","_triggerChildEvent","propertyModel","from","ReconnectingWebSocket","reconnectDecay","_authData","_requestsCallback","_isInstalled","_isConnected","_isAuthorized","_requestTimeout","_requestTimer","_currentDefaultPortIndex","_defaultPort","port","localStorage","getItem","host","onconnecting","_onConnectingWS","onopen","_onOpenWS","onerror","_onErrorWS","onmessage","_onMessageWS","onclose","_onCloseWS","abort","isInstalled","isAuthorized","reconnect","refresh","connect","_generateID","timeoutAt","_checkRequestTimeout","requestString","_getCurrentPort","_currentCandidat","_connectToNextCandidat","_getCandidates","candidates","_candidates","_autorize","setItem","messageId","request","possible","dd","substr","application","lat","lng","isAvailable","isUnavailable","getFormattedUntil","format","Presence","Location","email","extension","faxNumber","language","mobilePhone","officePhone","picture","protocols","generateEvent","evt","createEvent","initCustomEvent","reconnectAttempts","readyState","WebSocket","CONNECTING","protocol","ws","forcedClose","timedOut","eventTarget","dispatchEvent","reconnectAttempt","debugAll","localWs","OPEN","isReconnect","CLOSED","code","reason","wasClean","CLOSING","g","eval"],"mappings":"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","file":"Wildix.IntegrationService.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IntegrationService\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"Wildix\"] = root[\"Wildix\"] || {}, root[\"Wildix\"][\"IntegrationService\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IntegrationService\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"Wildix\"] = root[\"Wildix\"] || {}, root[\"Wildix\"][\"IntegrationService\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(16), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}.call(this));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Represents a Wildix IntegrationService instance\n *\n * @class IntegrationService\n * @memberof Wildix\n * @extends external:Backbone.Events\n *\n * @param options {Object} options\n *\n * @example\n * var WIService = new Wildix.IntegrationService({\n *   name: \"MySomeApplication\",\n *   version: '1.0.0'\n * }\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(0), __webpack_require__(9));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['Logger', 'underscore', 'backbone', 'Connector'], factory);\n    } else {\n        // Browser\n        root.IntegrationService = factory(root.Logger, root.underscore, root.Backbone, root.Connector);\n    }\n}(this, function (Logger, _, Backbone, Connector){\n    'use strict';\n    // enable all logs\n    // Wildix.IntegrationService.Logger.setLevel(Wildix.IntegrationService.Logger.DEBUG)\n    // Logger.useDefaults();\n    // Logger.setLevel(Logger.DEBUG);  // Global logging level.\n\n    var logger = Logger.get('IntegrationService');\n\n    function IntegrationService(options){\n        this.initialize(options);\n    }\n\n    IntegrationService.Logger = Logger;\n\n    IntegrationService.Modules = {};\n\n    IntegrationService.addModule = function(name, module){\n        IntegrationService.Modules[name] = module;\n    };\n\n    _.extend(IntegrationService.prototype, Backbone.Events, {\n        _options: {\n            app: 'APP_WEBCRM',\n            name: 'WebCRM',\n            version: '0.0.1',\n            userAgent: navigator.userAgent,\n            platform: navigator.platform\n        },\n\n        _connectionOptions: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDelay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _connection: null,\n\n        _macComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _winComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _version: null,\n\n        initialize: function(options){\n            logger.info('Initialize Integration service', options);\n\n            _.extend(this._options, options);\n\n            this._options.app = 'APP_' + this._options.name.toUpperCase();\n\n            for (var key in IntegrationService.Modules) {\n                logger.info('Build module:', key);\n                if(typeof IntegrationService.Modules[key] === 'object'){\n                    var Module = function(){};\n                    Module.prototype = IntegrationService.Modules[key];\n\n                    this[key] = new Module();\n                    this[key].initialize(this);\n                }else{\n                    this[key] = new IntegrationService.Modules[key](this);\n                }\n            }\n\n            this.getConnection().on('ready', this._onReady, this);\n            this.getConnection().on('event:wiservice', this._onEventWiservice, this);\n            this.getConnection().on('message:' + this._options.app.toLowerCase(), this._onMessage, this);\n            this.getConnection().on('error', this._onConnectionError, this);\n        },\n\n        /**\n         * Plugin that provides Roster functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Roster}\n         */\n        Roster: null,\n\n        /**\n         * Plugin that provides Telephony functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Telephony}\n         */\n        Telephony: null,\n\n        /**\n         * Plugin that provides Chat functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Chat}\n         */\n        Chat: null,\n\n        /**\n         * Return connection to WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {Wildix.Connector}\n         */\n        getConnection: function() {\n            if(this._connection === null){\n                this._connection = new Connector(this._connectionOptions);\n                this._connection.setAuthData(this._options);\n            }\n            return this._connection;\n        },\n\n        _ready: false,\n\n        /**\n         * Return true if fully initialized connection with WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isReady: function(){\n            return this._ready;\n        },\n\n        _onReady: function(){\n            this._getVersion();\n        },\n\n        _countCollaborationss: 0,\n        _onEventWiservice: function(data){\n            logger.info('_onEventWiservice', data);\n            if(data && data.msgdata){\n                if(data.msgdata.type == 'connectionstatus'){\n                    if(data.msgdata.disconnected && data.msgdata.disconnected.collaboration){\n                        // maybe disconnected\n                        if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                            // have another collaboration connection\n                        }else{\n                            this._collaborationStatus = 'disconnected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }else if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        if(this._countCollaborations != data.msgdata.connected.collaboration.length){\n                            this._collaborationStatus = 'connected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }\n\n                    this._countCollaborations = 0;\n                    if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        this._countCollaborations = data.msgdata.connected.collaboration.length;\n                    }\n                }\n            }\n        },\n\n        _onMessage: function(data){\n            this.trigger(data.msgdata.command, data.msgdata.msgdata);\n        },\n\n        _onConnectionError: function(){\n            this.trigger('connection:error', this);\n        },\n\n        /**\n         * Return true if IntegrationService connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isConnected: function(){\n            return this.getConnection().isConnected();\n        },\n\n        _collaborationStatus: null,\n\n        /**\n         * Return collaboration status or null if IntegrationService not connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {string|null}\n         */\n        getCollaborationStatus: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n            if(this._collaborationStatus === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getconnectionstatus'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    logger.info('collaboration status', response);\n                    var connected = response.connected || {};\n                    if(connected.collaboration && connected.collaboration.length > 0){\n                        this._collaborationStatus = 'connected';\n                        this._countCollaborations = response.connected.collaboration.length;\n                        this.trigger('collaboration:' + this._collaborationStatus, this);\n                        this._ready = true;\n                        this.trigger('ready', this);\n                    }\n                }.bind(this));\n            }\n            return this._collaborationStatus;\n        },\n\n        /**\n         * Return collaboration version.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @private\n         * @param {string} name of app\n         * @param {bollean} force request version\n         * @return {string}\n         */\n        _getVersion: function(name, force){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(this._version === null || force){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getversion'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    if(response && response.wiservice){\n                        this._version = response;\n                        this.getCollaborationStatus();\n                    }\n                }.bind(this));\n            }\n\n            if(name){\n                if(this._version && this._version.hasOwnProperty(name) && this._version[name]){\n                    return this._version[name];\n                }\n                return null;\n            }\n            return this._version;\n        }\n    });\n\n    return IntegrationService;\n}));\n\n/**\n * Indicates that could not connect to WIService.\n *\n * @event Wildix.IntegrationService#connection:error\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('connection:error', function(){\n *   console.warn('WIService not installed or is not running');\n * });\n */\n\n/**\n * Indicates that collaboration is connected and IntegrationService received status.\n *\n * @event Wildix.IntegrationService#ready\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('ready', function(){\n *   var status = WIService.getCollaborationStatus();\n *   if(status == 'disconnected'){\n *       console.warn('Collaboration not running');\n *   }\n * });\n */\n\n/**\n * Indicates that Collaboration is connected to WIService.\n *\n * @event Wildix.IntegrationService#collaboration:connected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:connected', function(){\n *   console.log('Collaboration connected');\n * });\n */\n\n/**\n * Indicates that Collaboration is disconnected from the WIService.\n *\n * @event Wildix.IntegrationService#collaboration:disconnected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:disconnected', function(){\n *   console.log('Collaboration disconnected');\n * });\n */\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents call information.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.<br />\n * Used in Telephony plugin and can be received from {@link Wildix.Telephony}.\n *\n * @class Call\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property name {string} name of the connected call.\n * @property number {string} number of the connected call.\n * @property channel {string}\n * @property destination {string}\n * @property destinationType {string}\n * @property direction {string}\n * @property duration {string}\n * @property id {string}\n * @property record {string}\n * @property state {string}\n * @property type {string}\n * @example\n * user.get('call').get(property)\n * or\n * call.get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Call = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Call');\n\n    return Backbone.Model.extend({\n        defaults: {\n            name: '',\n            number: '',\n            channel: '',\n            destination: '',\n            destinationType: '',\n            direction: '',\n            duration: '',\n            id: '',\n            record: '',\n            state: '',\n            type: ''\n        },\n        idAttribute: 'channel',\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Chat functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Chat|Chat} property.\n *\n * @class Chat\n * @memberof Wildix\n * @extends external:Backbone.Events\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(3), __webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone'], factory);\n    } else if (typeof EventEmitter !== 'undefined'){\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone);\n    }\n}(this, function (IntegrationService, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Chat');\n\n    IntegrationService.addModule('Chat', _.extend({}, Backbone.Events, {\n\n        _integrationService: null,\n        _connection: null,\n\n        initialize: function(IS){\n            logger.info('Initialize');\n\n            this._integrationService = IS;\n            this._connection = this._integrationService.getConnection();\n        },\n\n        /**\n         * Initiates a open chat to a specified extension.\n         *\n         * @example\n         * WIService.Chat.open('101');\n         *\n         * @memberof Wildix.Chat#\n         * @param {string} number  A number to open chat.\n         * @return {void}\n         */\n        open: function(number){\n            var message = {\n                'msgdata': {\n                    'type': 'chat',\n                    'number': number\n                }\n            };\n            this._connection.send(message);\n        }\n\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Roster functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Roster|Roster} property.\n *\n * @class Roster\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Roster.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(3),\n                __webpack_require__(2),\n                __webpack_require__(0),\n                __webpack_require__(12)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/User'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.User);\n    }\n}(this, function (IntegrationService, _, Backbone, User){\n    'use strict';\n    var logger = Logger.get('Roster');\n\n    IntegrationService.addModule('Roster', Backbone.Collection.extend({\n        model: User,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(IS){\n            logger.info('initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setroster', this._onSetRoster, this);\n            this._integrationService.on('updateuser', this._onUpdateUser, this);\n            this._integrationService.on('removeuser', this._onRemoveUser, this);\n            this._integrationService.on('adduser', this._onAddUser, this);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a roster event.\n         *\n         * @memberof Wildix.Roster#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to roster events\n         *\n         * @memberof Wildix.Roster#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'roster'\n                    }\n                };\n\n                this._connection.send(message);\n            }\n        },\n\n        _prepareUser: function(item){\n            var user = _.clone(item);\n            user.location = item.presence.extra.location;\n            user.call = item.presence.extra.call;\n            user.presence = {\n                type: item.presence.type,\n                show: item.presence.show,\n                status: item.presence.status,\n                deviceShow: item.presence.extra['device-show'],\n                until: item.presence.until\n            };\n\n            return user;\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetRoster: function(roster){\n            logger.info('Received roster:', roster);\n            var newRoster = [];\n            for(var i = 0; i < roster.length; i++){\n                newRoster.push(this._prepareUser(roster[i]));\n            }\n            this.reset(newRoster);\n        },\n\n        _onUpdateUser: function(user){\n            logger.info('Update user:', user);\n            var item = this.get(user.id);\n            if(item){\n                item.set(this._prepareUser(user));\n            }\n        },\n\n        _onRemoveUser: function(user){\n            logger.info('Removed user:', user);\n            var item = this.get(user.id);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddUser: function(user){\n            logger.info('Added user:', user);\n\n            if(!this.get(user.id)){\n                this.add(this._prepareUser(user));\n            }\n        }\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * A plugin that provides Telephony functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Telephony|Telephony} property.\n *\n * @class Telephony\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Telephony.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(3),\n                __webpack_require__(2),\n                __webpack_require__(0),\n                __webpack_require__(4)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/Call'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.Call);\n    }\n}(this, function (IntegrationService, _, Backbone, Call){\n    'use strict';\n    var logger = Logger.get('Telephony');\n\n    IntegrationService.addModule('Telephony', Backbone.Collection.extend({\n        model: Call,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(){\n            logger.info('Initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setcalls', this._onSetCalls, this);\n            this._integrationService.on('updatecall', this._onUpdateCall, this);\n            this._integrationService.on('removecall', this._onRemoveCall, this);\n            this._integrationService.on('addcall', this._onAddCall, this);\n        },\n\n        /**\n         * Initiates a call to a specified number.\n         *\n         * @example\n         * WIService.Telephony.call('101');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} number A number to call.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        call: function(number, callback){\n            var message = {\n                'msgdata': {\n                    'type': 'call',\n                    'number': number\n                }\n            };\n            this._connection.send(message, callback);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a call event.\n         *\n         * @memberof Wildix.Telephony#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to call events\n         *\n         * @memberof Wildix.Telephony#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'calls'\n                    }\n                };\n                this._connection.send(message);\n            }\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetCalls: function(calls){\n            logger.info('Received calls:', calls);\n\n            this.reset(calls);\n        },\n\n        _onUpdateCall: function(call){\n            logger.info('Update call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                item.set(call);\n            }\n        },\n\n        _onRemoveCall: function(call){\n            logger.info('Removed call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddCall: function(call){\n            logger.info('Added call:', call);\n            if(!this.get(call.channel)){\n                this.add(call);\n            }\n        }\n    }));\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * idea from https://github.com/prantlf/backbone.composite-model\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone'], factory);\n    } else {\n        // Browser\n        factory(root.underscore, root.Backbone);\n    }\n}(this, function (_, Backbone){\n    'use strict';\n\n    Backbone.mixinCompositeModel = function (prototype) {\n        var originalSet = prototype.set;\n        var originalToJSON = prototype.toJSON;\n\n        return _.extend(prototype, {\n\n            makeComposite: function (options) {\n                for(var property in this.composite){\n                    this.get(property).on('all', this._triggerChildEvent.bind(this, property), this);\n                }\n            },\n\n            // Overriding set\n            set: function(attributes, options) {\n                for(var property in this.composite){\n                    if(attributes[property]){\n                        var propertyModel = this.get(property);\n                        if(propertyModel){\n                            propertyModel.set(attributes[property], options);\n                            delete attributes[property];\n                        }else{\n                            attributes[property] = new this.composite[property](attributes[property]);\n                        }\n                    }\n                }\n\n                return originalSet.call(this, attributes, options);\n            },\n\n            _triggerChildEvent: function(){\n                var property = arguments[0];\n                var args = Array.from(arguments);\n                args = args.slice(1);\n\n                args[0] = args[0].split(':');\n                args[0].splice(1, 0, property);\n                args[0] = args[0].join(':');\n\n                args.splice(1, 0, this);\n                this.trigger.apply(this, args);\n                if(arguments[1] == 'change'){\n                    this.trigger('change', this, args[args.length - 1]);\n                }\n            },\n\n            // Overrides the `Backbone.Model:toJSON()` method to ensure that the\n            // up-to-date nested attribute values will be present in the result\n            toJSON: function(options) {\n                var result = originalToJSON.call(this, options);\n                for(var property in this.composite){\n                    var child = this.get(property);\n                    if (child) {\n                        result[property] = child.toJSON();\n                    }\n                }\n                return result;\n            }\n        });\n    };\n\n    return Backbone.mixinCompositeModel;\n}));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Provides connectivity to WIService\n *\n * @class Connector\n * @memberof Wildix\n * @extends external:Backbone.Events\n * @param options {Object} options\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(14), __webpack_require__(2), __webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['ReconnectingWebSocket', 'underscore', 'backbone'], factory);\n    } else if (typeof ReconnectingWebSocket !== 'undefined' && typeof ReconnectingWebSocket !== 'undefined'){\n        // Browser\n        root.Connector = factory(root.ReconnectingWebSocket, root.underscore, root.Backbone);\n    }\n}(this, function (ReconnectingWebSocket, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Connector');\n\n    function Connector(options){\n        this.initialize(options);\n    }\n\n    _.extend(Connector.prototype, Backbone.Events, {\n\n        _options: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDecay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _authData: null,\n\n        _connection: null,\n        _requestsCallback: {},\n\n        _isInstalled: false,\n        _isConnected: false,\n        _isAuthorized: false,\n\n        _requestTimeout: 120000,\n        _requestTimer: null,\n\n        _currentDefaultPortIndex: 0,\n        _defaultPort: [8888, 8889, 8890],\n\n        initialize: function(options){\n            logger.info('Initialize', options);\n\n            _.extend(this._options, options);\n\n            var port = window.localStorage.getItem('Wildix.IntegrationService.Port');\n            if(port){\n                this.getConnection(port);\n            }else{\n                this.getConnection();\n            }\n        },\n\n        getConnection: function(port) {\n            if(!port){\n                port = this._defaultPort[this._currentDefaultPortIndex];\n            }\n            if(this._connection === null){\n                var host = 'wss://wildixintegration.eu:' + port + '/';\n                this._connection = new ReconnectingWebSocket(host, null, this._options);\n\n                this._connection.onconnecting = this._onConnectingWS.bind(this);\n                this._connection.onopen = this._onOpenWS.bind(this);\n                this._connection.onerror = this._onErrorWS.bind(this);\n                this._connection.onmessage = this._onMessageWS.bind(this);\n                this._connection.onclose = this._onCloseWS.bind(this);\n            }\n            return this._connection;\n        },\n\n        setAuthData: function(data){\n            this._authData = data;\n        },\n\n        abort: function(){\n            this._connection.onconnecting = function(event) {};\n            this._connection.onopen = function(event) {};\n            this._connection.onerror = function(event) {};\n            this._connection.onmessage = function(event) {};\n            this._connection.onclose = function(event) {};\n\n            this._connection.close();\n            this._connection = null;\n\n            this._isConnected = false;\n            this._isAuthorized = false;\n        },\n\n        isInstalled: function() {\n            return this._isInstalled;\n        },\n\n        isConnected: function() {\n            return this._isConnected;\n        },\n\n        isAuthorized: function() {\n            return this._isAuthorized;\n        },\n\n        isReady: function(){\n            if(this.isInstalled() && this.isConnected() && this.isAuthorized()){\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Initiates reconnection to WIService\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        reconnect: function(){\n            this.getConnection().refresh();\n        },\n\n        /**\n         * Open connection to the WIService.\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        connect: function(){\n            this.getConnection().open();\n        },\n\n        send: function(message, callback, timeout) {\n            if(!this.isConnected()){\n                return;\n            }\n            if(!message){\n                return;\n            }\n            if(!message.hasOwnProperty('message')){\n                message = _.extend({}, {\n                    message: 'E_' + this._authData.app\n                }, message);\n            }\n\n            if(!message.hasOwnProperty('id')){\n                message.id = this._generateID();\n            }\n\n            if(callback){\n                if(timeout === null || typeof timeout === 'undefined' || timeout < 0){\n                    timeout = this._requestTimeout;\n                }\n                this._requestsCallback[message.id] = {\n                    callback: callback,\n                    message: message,\n                    timeoutAt: Date.now() + timeout\n                };\n\n                this._checkRequestTimeout();\n            }\n\n            var requestString = JSON.stringify(message);\n\n            return this.getConnection().send(requestString);\n        },\n\n        _getCurrentPort: function(){\n            return this._connection.url.match(/[^\\d]+(\\d+).*/)[1];\n        },\n\n        _currentCandidat: -1,\n        _connectToNextCandidat: function(){\n            this._currentCandidat++;\n\n            this._getCandidates(function(candidates){\n                if(candidates[this._currentCandidat]){\n                    this.abort();\n                    this.getConnection(candidates[this._currentCandidat]);\n                }else{\n                    this.abort();\n                    this._currentCandidat = 0;\n                    this._candidates = null;\n                }\n            }.bind(this));\n        },\n\n        _candidates: null,\n        _getCandidates: function(callback){\n            callback = callback || function(){};\n\n            if(this._candidates === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'candidates'\n                    }\n                };\n\n                this.send(message, function(response){\n                    if(response && response.candidates){\n                        this._candidates = response.candidates;\n                        callback(this._candidates);\n                    }\n                }.bind(this));\n            }else{\n                callback(this._candidates);\n            }\n        },\n\n        _autorize: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(!this._authData){\n                return null;\n            }\n\n            var message = {\n                'message': 'M_WISERVICE',\n                'msgdata': {\n                    'command': 'authorize',\n                    'msgdata': this._authData\n                }\n            };\n            this.send(message, function(response){\n                if(response && response.status && response.status == 'rejected'){\n                    logger.info('authorization rejected', response);\n                    this._connectToNextCandidat();\n                }else{\n                    window.localStorage.setItem('Wildix.IntegrationService.Port', this._getCurrentPort());\n                    this._isAuthorized = true;\n                    this._ready();\n                }\n            }.bind(this));\n        },\n\n        _ready: function(){\n            this.trigger('ready', this);\n        },\n\n        _checkRequestTimeout: function(){\n            if (!this._requestTimer){\n                this._requestTimer = setInterval(function(){\n                    for (var messageId in this._requestsCallback){\n                        if (this._requestsCallback.hasOwnProperty(messageId)){\n                            var request = this._requestsCallback[messageId];\n                            if (request.timeoutAt && request.timeoutAt <= Date.now()){\n                                this.trigger('requesttimeout', request);\n                                delete this._requestsCallback[messageId];\n                            }\n                        }\n                    }\n                }.bind(this), 100);\n            }\n        },\n\n        _generateID: function(len) {\n            if(!len){\n                len = 32;\n            }\n            var text = '';\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n            for(var i = 0; i < len; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n\n            return text;\n        },\n\n        _onConnectingWS: function(event) {\n            this._isConnected = false;\n            this.trigger('connecting', this);\n        },\n\n        _onOpenWS: function(event) {\n            this._isInstalled = true;\n            this._isConnected = true;\n            this.getConnection().maxReconnectAttempts = null;\n            this.trigger('connected', this);\n            this._autorize();\n        },\n\n        _onErrorWS: function(event, dd) {\n            if(this._candidates === null && this._defaultPort[this._currentDefaultPortIndex + 1]){\n                // if first connected and have next default port\n                if(this._getCurrentPort() == this._defaultPort[this._currentDefaultPortIndex]){\n                    // if port is default, then connect to the next default port\n                    this._currentDefaultPortIndex++;\n                }\n                this.abort();\n                this.getConnection();\n            }else{\n                this.abort();\n                this.trigger('error', this);\n            }\n        },\n\n        _onMessageWS: function(event) {\n            var message = null;\n            if(event.hasOwnProperty('data') && event.data){\n                try{\n                    message = JSON.parse(event.data);\n                }catch(e){\n                    logger.error('Bad message', e);\n                }\n            }\n            if(message && message.hasOwnProperty('message')){\n                switch (message.message.substr(0, 2)) {\n                    case 'E_': message.type = 'event';\n                        break;\n                    case 'R_': message.type = 'response';\n                        break;\n                    case 'C_': message.type = 'chunked';\n                        break;\n                    default: message.type = 'message';\n                        break;\n                }\n\n                message.application = message.message.substr(2);\n                message.application = message.application.toLowerCase();\n            }\n\n            if(message && message.hasOwnProperty('id')){\n                if(message.type == 'response' && this._requestsCallback.hasOwnProperty(message.id)){\n                    if(this._requestsCallback[message.id].hasOwnProperty('callback')){\n                        this._requestsCallback[message.id].callback(message.msgdata);\n                    }\n                    delete this._requestsCallback[message.id];\n                }\n            }\n\n            this.trigger(message.type + ':' + message.application, message);\n        },\n\n        _onCloseWS: function(event) {\n            if(this._isConnected){\n                this._isConnected = false;\n                logger.error('WS closed', event);\n                this.trigger('close', this);\n            }\n        }\n    });\n\n    return Connector;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a geographic location of User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Location\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property address {string} Address of this location\n * @property lat {string} Latitude in degrees\n * @property lng {string} Longitude in degrees\n * @example\n * user.get('location').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Location = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Location');\n\n    return Backbone.Model.extend({\n        defaults: {\n            address: '',\n            lat: '',\n            lng: ''\n        },\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a presence of a User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Presence\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property type {string} Type status\n *                        <ul>\n *                            <li>available</li>\n *                            <li>unavailable</li>\n *                        </ul>\n * @property show {string} Main status\n *                              <ul>\n *                                  <li>available</li>\n *                                  <li>dnd</li>\n *                                  <li>away</li>\n *                                  <li>mur</li>\n *                              </ul>\n * @property status {string} Status message.\n * @property deviceShow {string} Device state\n *                              <ul>\n *                                  <li>ringing</li>\n *                                  <li>talking</li>\n *                                  <li>rt</li>\n *                                  <li>registered</li>\n *                              </ul>\n * @property until {string} Expire date - a date when this presence are valid.\n * @example\n * user.get('presence').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(__webpack_require__(0));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Presence = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n    var logger = Logger.get('Presence');\n\n    return Backbone.Model.extend({\n        defaults: {\n            type: 'unavailable', // available || unavailable\n            show: '',  // dnd || away || available\n            status: '',\n            deviceShow: '', // ringing || talking || rt\n            until: '' // Date\n        },\n\n        initialize: function() {\n            logger.info('initialize');\n        },\n\n        isAvailable: function(){\n            if(this.get('type') == 'available'){\n                return true;\n            }\n            return false;\n        },\n\n        isUnavailable: function(){\n            if(this.get('type') == 'unavailable'){\n                return true;\n            }\n            return false;\n        },\n\n        getFormattedUntil: function(){\n            if(this.get('until') && this.get('until') != ''){\n                return this.get('until').format('dd/mm/yyyy HH:MM');\n            }\n            return '';\n        }\n    });\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Logger) {/**\n * Represents a user that are participated in Wildix PBX.\n *\n * @class User\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property email {string}\n * @property extension {string} Can be empty when user doesn't have extension, for example user from Kite service.\n * @property faxNumber {string}\n * @property id {string}\n * @property language {string}\n * @property mobilePhone {string}\n * @property name {string}\n * @property officePhone {string}\n * @property picture {string} Url to the picture of the user\n * @property presence {Wildix.Models.Presence}\n * @property location {Wildix.Models.Location}\n * @property call {Wildix.Models.Call}\n */\n(function universalModuleDefinition(root, factory){\n    if (true){\n        // CommonJS\n        module.exports = factory(\n                __webpack_require__(2), __webpack_require__(0),\n                __webpack_require__(11), __webpack_require__(10),\n                __webpack_require__(4)\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone', 'Models/Presence', 'Models/Location', 'Models/Call'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.User = factory(\n                root.underscore,\n                root.Backbone,\n                root.Models.Presence,\n                root.Models.Location,\n                root.Models.Call\n        );\n    }\n}(this, function (_, Backbone, Presence, Location, Call){\n    'use strict';\n    var logger = Logger.get('User');\n\n    var User = Backbone.Model.extend({\n\n        composite: {\n            presence: Presence,\n            call: Call,\n            location: Location\n        },\n\n        defaults: {\n            email: '',\n            extension: '',\n            faxNumber: '',\n            id: '',\n            language: '',\n            mobilePhone: '',\n            name: '',\n            officePhone: '',\n            picture: '',\n            presence: null,\n            location: null,\n            call: null\n        },\n\n        idAttribute: 'id',\n\n        initialize: function(data, options) {\n            logger.info('initialize');\n\n            this.makeComposite(options);\n        }\n    });\n\n    Backbone.mixinCompositeModel(User.prototype);\n\n    return User;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * The Backbone namespace.\n *\n *\n * @external Backbone\n * @see {@link http://backbonejs.org/|Backbone}\n */\n\n/**\n * The Backbone collection class.\n *\n * @class Collection\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Collection|Backbone.Collection}\n */\n\n/**\n * The Backbone model class.\n *\n * @class Model\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Model|Backbone.Model}\n */\n\n/**\n * The Backbone events class.\n *\n * @class Events\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Events|Backbone.Events}\n */\n\n/**\n * The Wildix namespace.\n *\n * @namespace Wildix\n */\n\n/**\n * The Models namespace.\n *\n * @namespace Models\n * @memberof Wildix\n */\n\n__webpack_require__(8);\n\n__webpack_require__(6);\n__webpack_require__(5);\n__webpack_require__(7);\n\nif (true){\n    module.exports = __webpack_require__(3);\n}else{\n    require('IntegrationService');\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module !== 'undefined' && module.exports){\n        module.exports = factory();\n    } else {\n        global.ReconnectingWebSocket = factory();\n    }\n})(this, function () {\n\n    if (!('WebSocket' in window)) {\n        return;\n    }\n\n    function ReconnectingWebSocket(url, protocols, options) {\n\n        // Default settings\n        var settings = {\n\n            /** Whether this instance should log debug messages. */\n            debug: false,\n\n            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n            automaticOpen: true,\n\n            /** The number of milliseconds to delay before attempting to reconnect. */\n            reconnectInterval: 1000,\n            /** The maximum number of milliseconds to delay a reconnection attempt. */\n            maxReconnectInterval: 30000,\n            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n            reconnectDecay: 1.5,\n\n            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n            timeoutInterval: 2000,\n\n            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n            maxReconnectAttempts: null\n        }\n        if (!options) { options = {}; }\n\n        // Overwrite and define settings with options if they exist.\n        for (var key in settings) {\n            if (typeof options[key] !== 'undefined') {\n                this[key] = options[key];\n            } else {\n                this[key] = settings[key];\n            }\n        }\n\n        // These should be treated as read-only properties\n\n        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n        this.url = url;\n\n        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n        this.reconnectAttempts = 0;\n\n        /**\n         * The current state of the connection.\n         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n         * Read only.\n         */\n        this.readyState = WebSocket.CONNECTING;\n\n        /**\n         * A string indicating the name of the sub-protocol the server selected; this will be one of\n         * the strings specified in the protocols parameter when creating the WebSocket object.\n         * Read only.\n         */\n        this.protocol = null;\n\n        // Private state variables\n\n        var self = this;\n        var ws;\n        var forcedClose = false;\n        var timedOut = false;\n        var eventTarget = document.createElement('div');\n\n        // Wire up \"on*\" properties as event handlers\n\n        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\n        // Expose the API required by EventTarget\n\n        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n        /**\n         * This function generates an event that is compatible with standard\n         * compliant browsers and IE9 - IE11\n         *\n         * This will prevent the error:\n         * Object doesn't support this action\n         *\n         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n         * @param s String The name that the event should use\n         * @param args Object an optional object that the event will use\n         */\n        function generateEvent(s, args) {\n        \tvar evt = document.createEvent(\"CustomEvent\");\n        \tevt.initCustomEvent(s, false, false, args);\n        \treturn evt;\n        };\n\n        this.open = function (reconnectAttempt) {\n            ws = new WebSocket(self.url, protocols || []);\n\n            if (reconnectAttempt) {\n                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n                    return;\n                }\n            } else {\n                eventTarget.dispatchEvent(generateEvent('connecting'));\n                this.reconnectAttempts = 0;\n            }\n\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n            }\n\n            var localWs = ws;\n            var timeout = setTimeout(function() {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n                }\n                timedOut = true;\n                localWs.close();\n                timedOut = false;\n            }, self.timeoutInterval);\n\n            ws.onopen = function(event) {\n                clearTimeout(timeout);\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n                }\n                self.protocol = ws.protocol;\n                self.readyState = WebSocket.OPEN;\n                self.reconnectAttempts = 0;\n                var e = generateEvent('open');\n                e.isReconnect = reconnectAttempt;\n                reconnectAttempt = false;\n                eventTarget.dispatchEvent(e);\n            };\n\n            ws.onclose = function(event) {\n                clearTimeout(timeout);\n                ws = null;\n                if (forcedClose) {\n                    self.readyState = WebSocket.CLOSED;\n                    eventTarget.dispatchEvent(generateEvent('close'));\n                } else {\n                    self.readyState = WebSocket.CONNECTING;\n                    var e = generateEvent('connecting');\n                    e.code = event.code;\n                    e.reason = event.reason;\n                    e.wasClean = event.wasClean;\n                    eventTarget.dispatchEvent(e);\n                    if (!reconnectAttempt && !timedOut) {\n                        if (self.debug || ReconnectingWebSocket.debugAll) {\n                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n                        }\n                        eventTarget.dispatchEvent(generateEvent('close'));\n                    }\n\n                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n                    setTimeout(function() {\n                        self.reconnectAttempts++;\n                        self.open(true);\n                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n                }\n            };\n            ws.onmessage = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n                }\n                var e = generateEvent('message');\n                e.data = event.data;\n                eventTarget.dispatchEvent(e);\n            };\n            ws.onerror = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n                }\n                eventTarget.dispatchEvent(generateEvent('error'));\n            };\n        }\n\n        // Whether or not to create a websocket upon instantiation\n        if (this.automaticOpen == true) {\n            this.open(false);\n        }\n\n        /**\n         * Transmits data to the server over the WebSocket connection.\n         *\n         * @param data a text string, ArrayBuffer or Blob to send to the server.\n         */\n        this.send = function(data) {\n            if (ws) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n                }\n                return ws.send(data);\n            } else {\n                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n            }\n        };\n\n        /**\n         * Closes the WebSocket connection or connection attempt, if any.\n         * If the connection is already CLOSED, this method does nothing.\n         */\n        this.close = function(code, reason) {\n            // Default CLOSE_NORMAL code\n            if (typeof code == 'undefined') {\n                code = 1000;\n            }\n            forcedClose = true;\n            if (ws) {\n                ws.close(code, reason);\n            }\n        };\n\n        /**\n         * Additional public API method to refresh the connection if still open (close, re-open).\n         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n         */\n        this.refresh = function() {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }\n\n    /**\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n     * this indicates that the connection is ready to send and receive data.\n     */\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n    /** An event listener to be called when a connection begins being attempted. */\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n    /** An event listener to be called when a message is received from the server. */\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n    /** An event listener to be called when an error occurs. */\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    /**\n     * Whether all instances of ReconnectingWebSocket should log debug messages.\n     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n     */\n    ReconnectingWebSocket.debugAll = false;\n\n    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n    return ReconnectingWebSocket;\n});\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Wildix.IntegrationService.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d58419efb09242431010","//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/backbone/backbone.js\n// module id = 0\n// module chunks = 0 1","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 1\n// module chunks = 0 1","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/underscore/underscore.js\n// module id = 2\n// module chunks = 0 1","/**\n * Represents a Wildix IntegrationService instance\n *\n * @class IntegrationService\n * @memberof Wildix\n * @extends external:Backbone.Events\n *\n * @param options {Object} options\n *\n * @example\n * var WIService = new Wildix.IntegrationService({\n *   name: \"MySomeApplication\",\n *   version: '1.0.0'\n * }\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('Logger'), require('underscore'), require('backbone'), require('Connector'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['Logger', 'underscore', 'backbone', 'Connector'], factory);\n    } else {\n        // Browser\n        root.IntegrationService = factory(root.Logger, root.underscore, root.Backbone, root.Connector);\n    }\n}(this, function (Logger, _, Backbone, Connector){\n    'use strict';\n    // enable all logs\n    // Wildix.IntegrationService.Logger.setLevel(Wildix.IntegrationService.Logger.DEBUG)\n    // Logger.useDefaults();\n    // Logger.setLevel(Logger.DEBUG);  // Global logging level.\n\n    var logger = Logger.get('IntegrationService');\n\n    function IntegrationService(options){\n        this.initialize(options);\n    }\n\n    IntegrationService.Logger = Logger;\n\n    IntegrationService.Modules = {};\n\n    IntegrationService.addModule = function(name, module){\n        IntegrationService.Modules[name] = module;\n    };\n\n    _.extend(IntegrationService.prototype, Backbone.Events, {\n        _options: {\n            app: 'APP_WEBCRM',\n            name: 'WebCRM',\n            version: '0.0.1',\n            userAgent: navigator.userAgent,\n            platform: navigator.platform\n        },\n\n        _connectionOptions: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDelay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _connection: null,\n\n        _macComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _winComponentVersion: {\n            'wiservice': '2.5.0'\n        },\n\n        _version: null,\n\n        initialize: function(options){\n            logger.info('Initialize Integration service', options);\n\n            _.extend(this._options, options);\n\n            this._options.app = 'APP_' + this._options.name.toUpperCase();\n\n            for (var key in IntegrationService.Modules) {\n                logger.info('Build module:', key);\n                if(typeof IntegrationService.Modules[key] === 'object'){\n                    var Module = function(){};\n                    Module.prototype = IntegrationService.Modules[key];\n\n                    this[key] = new Module();\n                    this[key].initialize(this);\n                }else{\n                    this[key] = new IntegrationService.Modules[key](this);\n                }\n            }\n\n            this.getConnection().on('ready', this._onReady, this);\n            this.getConnection().on('event:wiservice', this._onEventWiservice, this);\n            this.getConnection().on('message:' + this._options.app.toLowerCase(), this._onMessage, this);\n            this.getConnection().on('error', this._onConnectionError, this);\n        },\n\n        /**\n         * Plugin that provides Roster functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Roster}\n         */\n        Roster: null,\n\n        /**\n         * Plugin that provides Telephony functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Telephony}\n         */\n        Telephony: null,\n\n        /**\n         * Plugin that provides Chat functionality\n         *\n         * @memberof Wildix.IntegrationService#\n         * @type {Wildix.Chat}\n         */\n        Chat: null,\n\n        /**\n         * Return connection to WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {Wildix.Connector}\n         */\n        getConnection: function() {\n            if(this._connection === null){\n                this._connection = new Connector(this._connectionOptions);\n                this._connection.setAuthData(this._options);\n            }\n            return this._connection;\n        },\n\n        _ready: false,\n\n        /**\n         * Return true if fully initialized connection with WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isReady: function(){\n            return this._ready;\n        },\n\n        _onReady: function(){\n            this._getVersion();\n        },\n\n        _countCollaborationss: 0,\n        _onEventWiservice: function(data){\n            logger.info('_onEventWiservice', data);\n            if(data && data.msgdata){\n                if(data.msgdata.type == 'connectionstatus'){\n                    if(data.msgdata.disconnected && data.msgdata.disconnected.collaboration){\n                        // maybe disconnected\n                        if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                            // have another collaboration connection\n                        }else{\n                            this._collaborationStatus = 'disconnected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }else if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        if(this._countCollaborations != data.msgdata.connected.collaboration.length){\n                            this._collaborationStatus = 'connected';\n                            this.trigger('collaboration:' + this._collaborationStatus, this);\n                        }\n                    }\n\n                    this._countCollaborations = 0;\n                    if(data.msgdata.connected && data.msgdata.connected.collaboration){\n                        this._countCollaborations = data.msgdata.connected.collaboration.length;\n                    }\n                }\n            }\n        },\n\n        _onMessage: function(data){\n            this.trigger(data.msgdata.command, data.msgdata.msgdata);\n        },\n\n        _onConnectionError: function(){\n            this.trigger('connection:error', this);\n        },\n\n        /**\n         * Return true if IntegrationService connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {boolean}\n         */\n        isConnected: function(){\n            return this.getConnection().isConnected();\n        },\n\n        _collaborationStatus: null,\n\n        /**\n         * Return collaboration status or null if IntegrationService not connected to the WIService.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @return {string|null}\n         */\n        getCollaborationStatus: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n            if(this._collaborationStatus === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getconnectionstatus'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    logger.info('collaboration status', response);\n                    var connected = response.connected || {};\n                    if(connected.collaboration && connected.collaboration.length > 0){\n                        this._collaborationStatus = 'connected';\n                        this._countCollaborations = response.connected.collaboration.length;\n                        this.trigger('collaboration:' + this._collaborationStatus, this);\n                        this._ready = true;\n                        this.trigger('ready', this);\n                    }\n                }.bind(this));\n            }\n            return this._collaborationStatus;\n        },\n\n        /**\n         * Return collaboration version.\n         *\n         * @memberof Wildix.IntegrationService#\n         * @private\n         * @param {string} name of app\n         * @param {bollean} force request version\n         * @return {string}\n         */\n        _getVersion: function(name, force){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(this._version === null || force){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'getversion'\n                    }\n                };\n                this.getConnection().send(message, function(response){\n                    if(response && response.wiservice){\n                        this._version = response;\n                        this.getCollaborationStatus();\n                    }\n                }.bind(this));\n            }\n\n            if(name){\n                if(this._version && this._version.hasOwnProperty(name) && this._version[name]){\n                    return this._version[name];\n                }\n                return null;\n            }\n            return this._version;\n        }\n    });\n\n    return IntegrationService;\n}));\n\n/**\n * Indicates that could not connect to WIService.\n *\n * @event Wildix.IntegrationService#connection:error\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('connection:error', function(){\n *   console.warn('WIService not installed or is not running');\n * });\n */\n\n/**\n * Indicates that collaboration is connected and IntegrationService received status.\n *\n * @event Wildix.IntegrationService#ready\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('ready', function(){\n *   var status = WIService.getCollaborationStatus();\n *   if(status == 'disconnected'){\n *       console.warn('Collaboration not running');\n *   }\n * });\n */\n\n/**\n * Indicates that Collaboration is connected to WIService.\n *\n * @event Wildix.IntegrationService#collaboration:connected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:connected', function(){\n *   console.log('Collaboration connected');\n * });\n */\n\n/**\n * Indicates that Collaboration is disconnected from the WIService.\n *\n * @event Wildix.IntegrationService#collaboration:disconnected\n * @property IntegrationService {Wildix.IntegrationService}\n * @example\n * WIService.on('collaboration:disconnected', function(){\n *   console.log('Collaboration disconnected');\n * });\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./IntegrationService.js\n// module id = 3\n// module chunks = 0 1","/**\n * Represents call information.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.<br />\n * Used in Telephony plugin and can be received from {@link Wildix.Telephony}.\n *\n * @class Call\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property name {string} name of the connected call.\n * @property number {string} number of the connected call.\n * @property channel {string}\n * @property destination {string}\n * @property destinationType {string}\n * @property direction {string}\n * @property duration {string}\n * @property id {string}\n * @property record {string}\n * @property state {string}\n * @property type {string}\n * @example\n * user.get('call').get(property)\n * or\n * call.get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Call = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Call');\n\n    return Backbone.Model.extend({\n        defaults: {\n            name: '',\n            number: '',\n            channel: '',\n            destination: '',\n            destinationType: '',\n            direction: '',\n            duration: '',\n            id: '',\n            record: '',\n            state: '',\n            type: ''\n        },\n        idAttribute: 'channel',\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Call.js\n// module id = 4\n// module chunks = 0 1","/**\n * A plugin that provides Chat functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Chat|Chat} property.\n *\n * @class Chat\n * @memberof Wildix\n * @extends external:Backbone.Events\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('IntegrationService'), require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone'], factory);\n    } else if (typeof EventEmitter !== 'undefined'){\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone);\n    }\n}(this, function (IntegrationService, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Chat');\n\n    IntegrationService.addModule('Chat', _.extend({}, Backbone.Events, {\n\n        _integrationService: null,\n        _connection: null,\n\n        initialize: function(IS){\n            logger.info('Initialize');\n\n            this._integrationService = IS;\n            this._connection = this._integrationService.getConnection();\n        },\n\n        /**\n         * Initiates a open chat to a specified extension.\n         *\n         * @example\n         * WIService.Chat.open('101');\n         *\n         * @memberof Wildix.Chat#\n         * @param {string} number  A number to open chat.\n         * @return {void}\n         */\n        open: function(number){\n            var message = {\n                'msgdata': {\n                    'type': 'chat',\n                    'number': number\n                }\n            };\n            this._connection.send(message);\n        }\n\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Chat.js\n// module id = 5\n// module chunks = 0 1","/**\n * A plugin that provides Roster functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Roster|Roster} property.\n *\n * @class Roster\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Roster.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('IntegrationService'),\n                require('underscore'),\n                require('backbone'),\n                require('Models/User')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/User'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.User);\n    }\n}(this, function (IntegrationService, _, Backbone, User){\n    'use strict';\n    var logger = Logger.get('Roster');\n\n    IntegrationService.addModule('Roster', Backbone.Collection.extend({\n        model: User,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(IS){\n            logger.info('initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setroster', this._onSetRoster, this);\n            this._integrationService.on('updateuser', this._onUpdateUser, this);\n            this._integrationService.on('removeuser', this._onRemoveUser, this);\n            this._integrationService.on('adduser', this._onAddUser, this);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a roster event.\n         *\n         * @memberof Wildix.Roster#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to roster events\n         *\n         * @memberof Wildix.Roster#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'roster'\n                    }\n                };\n\n                this._connection.send(message);\n            }\n        },\n\n        _prepareUser: function(item){\n            var user = _.clone(item);\n            user.location = item.presence.extra.location;\n            user.call = item.presence.extra.call;\n            user.presence = {\n                type: item.presence.type,\n                show: item.presence.show,\n                status: item.presence.status,\n                deviceShow: item.presence.extra['device-show'],\n                until: item.presence.until\n            };\n\n            return user;\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetRoster: function(roster){\n            logger.info('Received roster:', roster);\n            var newRoster = [];\n            for(var i = 0; i < roster.length; i++){\n                newRoster.push(this._prepareUser(roster[i]));\n            }\n            this.reset(newRoster);\n        },\n\n        _onUpdateUser: function(user){\n            logger.info('Update user:', user);\n            var item = this.get(user.id);\n            if(item){\n                item.set(this._prepareUser(user));\n            }\n        },\n\n        _onRemoveUser: function(user){\n            logger.info('Removed user:', user);\n            var item = this.get(user.id);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddUser: function(user){\n            logger.info('Added user:', user);\n\n            if(!this.get(user.id)){\n                this.add(this._prepareUser(user));\n            }\n        }\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Roster.js\n// module id = 6\n// module chunks = 0 1","/**\n * A plugin that provides Telephony functionality.\n * Instance will be created each time when new {@link Wildix.IntegrationService} instance is created. <br />\n * Plugin could be accessible thought {@link Wildix.IntegrationService|IntegrationService}\n * with {@link Wildix.IntegrationService#Telephony|Telephony} property.\n *\n * @class Telephony\n * @memberof Wildix\n * @extends external:Backbone.Collection\n * @example\n * WIService.Telephony.subscribe();\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('IntegrationService'),\n                require('underscore'),\n                require('backbone'),\n                require('Models/Call')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['IntegrationService', 'underscore', 'backbone', 'Models/Call'], factory);\n    } else {\n        // Browser\n        factory(root.IntegrationService, root.underscore, root.Backbone, root.Models.Call);\n    }\n}(this, function (IntegrationService, _, Backbone, Call){\n    'use strict';\n    var logger = Logger.get('Telephony');\n\n    IntegrationService.addModule('Telephony', Backbone.Collection.extend({\n        model: Call,\n\n        _integrationService: null,\n        _connection: null,\n\n        constructor: function(IS) {\n            this._integrationService = IS;\n            var args = [];\n            if(arguments.length > 1){\n                args = arguments.slice(1);\n            }\n            Backbone.Collection.apply(this, args);\n        },\n\n        initialize: function(){\n            logger.info('Initialize');\n\n            this._connection = this._integrationService.getConnection();\n\n            this._integrationService.on('collaboration:connected', this._onConnectedCollaboration, this);\n            this._integrationService.on('setcalls', this._onSetCalls, this);\n            this._integrationService.on('updatecall', this._onUpdateCall, this);\n            this._integrationService.on('removecall', this._onRemoveCall, this);\n            this._integrationService.on('addcall', this._onAddCall, this);\n        },\n\n        /**\n         * Initiates a call to a specified number.\n         *\n         * @example\n         * WIService.Telephony.call('101');\n         *\n         * @memberof Wildix.Telephony#\n         * @param {string} number A number to call.\n         * @param {function} callback Callback function called with result\n         * @return {void}\n         */\n        call: function(number, callback){\n            var message = {\n                'msgdata': {\n                    'type': 'call',\n                    'number': number\n                }\n            };\n            this._connection.send(message, callback);\n        },\n\n        _subscribed: false,\n\n        /**\n         * Returns true if subscribed to a call event.\n         *\n         * @memberof Wildix.Telephony#\n         * @return {boolean}\n         */\n        isSubscribed: function(){\n            return this._subscribed;\n        },\n\n        _needSubscribe: false,\n\n        /**\n         * Initializes a subscription to call events\n         *\n         * @memberof Wildix.Telephony#\n         * @return {void}\n         */\n        subscribe: function(){\n            this._needSubscribe = true;\n            if(this._integrationService.isReady()){\n                // if need subscribe and collaboration connected\n                // need send subscription\n                this._subscribe();\n            }\n        },\n\n        _subscribe: function(){\n            if(this._needSubscribe){\n                logger.info('Send subscription');\n\n                this._subscribed = true;\n\n                var message = {\n                    'msgdata': {\n                        'type': 'subscribe',\n                        'event': 'calls'\n                    }\n                };\n                this._connection.send(message);\n            }\n        },\n\n        _onConnectedCollaboration: function(){\n            this._subscribe();\n        },\n\n        _onSetCalls: function(calls){\n            logger.info('Received calls:', calls);\n\n            this.reset(calls);\n        },\n\n        _onUpdateCall: function(call){\n            logger.info('Update call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                item.set(call);\n            }\n        },\n\n        _onRemoveCall: function(call){\n            logger.info('Removed call:', call);\n            var item = this.get(call.channel);\n            if(item){\n                this.remove(item);\n            }\n        },\n\n        _onAddCall: function(call){\n            logger.info('Added call:', call);\n            if(!this.get(call.channel)){\n                this.add(call);\n            }\n        }\n    }));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Telephony.js\n// module id = 7\n// module chunks = 0 1","/**\n * idea from https://github.com/prantlf/backbone.composite-model\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone'], factory);\n    } else {\n        // Browser\n        factory(root.underscore, root.Backbone);\n    }\n}(this, function (_, Backbone){\n    'use strict';\n\n    Backbone.mixinCompositeModel = function (prototype) {\n        var originalSet = prototype.set;\n        var originalToJSON = prototype.toJSON;\n\n        return _.extend(prototype, {\n\n            makeComposite: function (options) {\n                for(var property in this.composite){\n                    this.get(property).on('all', this._triggerChildEvent.bind(this, property), this);\n                }\n            },\n\n            // Overriding set\n            set: function(attributes, options) {\n                for(var property in this.composite){\n                    if(attributes[property]){\n                        var propertyModel = this.get(property);\n                        if(propertyModel){\n                            propertyModel.set(attributes[property], options);\n                            delete attributes[property];\n                        }else{\n                            attributes[property] = new this.composite[property](attributes[property]);\n                        }\n                    }\n                }\n\n                return originalSet.call(this, attributes, options);\n            },\n\n            _triggerChildEvent: function(){\n                var property = arguments[0];\n                var args = Array.from(arguments);\n                args = args.slice(1);\n\n                args[0] = args[0].split(':');\n                args[0].splice(1, 0, property);\n                args[0] = args[0].join(':');\n\n                args.splice(1, 0, this);\n                this.trigger.apply(this, args);\n                if(arguments[1] == 'change'){\n                    this.trigger('change', this, args[args.length - 1]);\n                }\n            },\n\n            // Overrides the `Backbone.Model:toJSON()` method to ensure that the\n            // up-to-date nested attribute values will be present in the result\n            toJSON: function(options) {\n                var result = originalToJSON.call(this, options);\n                for(var property in this.composite){\n                    var child = this.get(property);\n                    if (child) {\n                        result[property] = child.toJSON();\n                    }\n                }\n                return result;\n            }\n        });\n    };\n\n    return Backbone.mixinCompositeModel;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/backbone.mixinCompositeModel.js\n// module id = 8\n// module chunks = 0 1","/**\n * Provides connectivity to WIService\n *\n * @class Connector\n * @memberof Wildix\n * @extends external:Backbone.Events\n * @param options {Object} options\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('ReconnectingWebSocket'), require('underscore'), require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['ReconnectingWebSocket', 'underscore', 'backbone'], factory);\n    } else if (typeof ReconnectingWebSocket !== 'undefined' && typeof ReconnectingWebSocket !== 'undefined'){\n        // Browser\n        root.Connector = factory(root.ReconnectingWebSocket, root.underscore, root.Backbone);\n    }\n}(this, function (ReconnectingWebSocket, _, Backbone){\n    'use strict';\n    var logger = Logger.get('Connector');\n\n    function Connector(options){\n        this.initialize(options);\n    }\n\n    _.extend(Connector.prototype, Backbone.Events, {\n\n        _options: {\n            debug: false,\n            automaticOpen: true,\n            reconnectInterval: 1000,\n            maxReconnectInterval: 5000,\n            reconnectDecay: 1,\n            timeoutInterval: 3000,\n            maxReconnectAttempts: 1\n        },\n\n        _authData: null,\n\n        _connection: null,\n        _requestsCallback: {},\n\n        _isInstalled: false,\n        _isConnected: false,\n        _isAuthorized: false,\n\n        _requestTimeout: 120000,\n        _requestTimer: null,\n\n        _currentDefaultPortIndex: 0,\n        _defaultPort: [8888, 8889, 8890],\n\n        initialize: function(options){\n            logger.info('Initialize', options);\n\n            _.extend(this._options, options);\n\n            var port = window.localStorage.getItem('Wildix.IntegrationService.Port');\n            if(port){\n                this.getConnection(port);\n            }else{\n                this.getConnection();\n            }\n        },\n\n        getConnection: function(port) {\n            if(!port){\n                port = this._defaultPort[this._currentDefaultPortIndex];\n            }\n            if(this._connection === null){\n                var host = 'wss://wildixintegration.eu:' + port + '/';\n                this._connection = new ReconnectingWebSocket(host, null, this._options);\n\n                this._connection.onconnecting = this._onConnectingWS.bind(this);\n                this._connection.onopen = this._onOpenWS.bind(this);\n                this._connection.onerror = this._onErrorWS.bind(this);\n                this._connection.onmessage = this._onMessageWS.bind(this);\n                this._connection.onclose = this._onCloseWS.bind(this);\n            }\n            return this._connection;\n        },\n\n        setAuthData: function(data){\n            this._authData = data;\n        },\n\n        abort: function(){\n            this._connection.onconnecting = function(event) {};\n            this._connection.onopen = function(event) {};\n            this._connection.onerror = function(event) {};\n            this._connection.onmessage = function(event) {};\n            this._connection.onclose = function(event) {};\n\n            this._connection.close();\n            this._connection = null;\n\n            this._isConnected = false;\n            this._isAuthorized = false;\n        },\n\n        isInstalled: function() {\n            return this._isInstalled;\n        },\n\n        isConnected: function() {\n            return this._isConnected;\n        },\n\n        isAuthorized: function() {\n            return this._isAuthorized;\n        },\n\n        isReady: function(){\n            if(this.isInstalled() && this.isConnected() && this.isAuthorized()){\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Initiates reconnection to WIService\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        reconnect: function(){\n            this.getConnection().refresh();\n        },\n\n        /**\n         * Open connection to the WIService.\n         *\n         * @memberof Wildix.Connector#\n         * @return {void}\n         */\n        connect: function(){\n            this.getConnection().open();\n        },\n\n        send: function(message, callback, timeout) {\n            if(!this.isConnected()){\n                return;\n            }\n            if(!message){\n                return;\n            }\n            if(!message.hasOwnProperty('message')){\n                message = _.extend({}, {\n                    message: 'E_' + this._authData.app\n                }, message);\n            }\n\n            if(!message.hasOwnProperty('id')){\n                message.id = this._generateID();\n            }\n\n            if(callback){\n                if(timeout === null || typeof timeout === 'undefined' || timeout < 0){\n                    timeout = this._requestTimeout;\n                }\n                this._requestsCallback[message.id] = {\n                    callback: callback,\n                    message: message,\n                    timeoutAt: Date.now() + timeout\n                };\n\n                this._checkRequestTimeout();\n            }\n\n            var requestString = JSON.stringify(message);\n\n            return this.getConnection().send(requestString);\n        },\n\n        _getCurrentPort: function(){\n            return this._connection.url.match(/[^\\d]+(\\d+).*/)[1];\n        },\n\n        _currentCandidat: -1,\n        _connectToNextCandidat: function(){\n            this._currentCandidat++;\n\n            this._getCandidates(function(candidates){\n                if(candidates[this._currentCandidat]){\n                    this.abort();\n                    this.getConnection(candidates[this._currentCandidat]);\n                }else{\n                    this.abort();\n                    this._currentCandidat = 0;\n                    this._candidates = null;\n                }\n            }.bind(this));\n        },\n\n        _candidates: null,\n        _getCandidates: function(callback){\n            callback = callback || function(){};\n\n            if(this._candidates === null){\n                var message = {\n                    'message': 'M_WISERVICE',\n                    'msgdata': {\n                        'command': 'candidates'\n                    }\n                };\n\n                this.send(message, function(response){\n                    if(response && response.candidates){\n                        this._candidates = response.candidates;\n                        callback(this._candidates);\n                    }\n                }.bind(this));\n            }else{\n                callback(this._candidates);\n            }\n        },\n\n        _autorize: function(){\n            if(!this.isConnected()){\n                return null;\n            }\n\n            if(!this._authData){\n                return null;\n            }\n\n            var message = {\n                'message': 'M_WISERVICE',\n                'msgdata': {\n                    'command': 'authorize',\n                    'msgdata': this._authData\n                }\n            };\n            this.send(message, function(response){\n                if(response && response.status && response.status == 'rejected'){\n                    logger.info('authorization rejected', response);\n                    this._connectToNextCandidat();\n                }else{\n                    window.localStorage.setItem('Wildix.IntegrationService.Port', this._getCurrentPort());\n                    this._isAuthorized = true;\n                    this._ready();\n                }\n            }.bind(this));\n        },\n\n        _ready: function(){\n            this.trigger('ready', this);\n        },\n\n        _checkRequestTimeout: function(){\n            if (!this._requestTimer){\n                this._requestTimer = setInterval(function(){\n                    for (var messageId in this._requestsCallback){\n                        if (this._requestsCallback.hasOwnProperty(messageId)){\n                            var request = this._requestsCallback[messageId];\n                            if (request.timeoutAt && request.timeoutAt <= Date.now()){\n                                this.trigger('requesttimeout', request);\n                                delete this._requestsCallback[messageId];\n                            }\n                        }\n                    }\n                }.bind(this), 100);\n            }\n        },\n\n        _generateID: function(len) {\n            if(!len){\n                len = 32;\n            }\n            var text = '';\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n            for(var i = 0; i < len; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n\n            return text;\n        },\n\n        _onConnectingWS: function(event) {\n            this._isConnected = false;\n            this.trigger('connecting', this);\n        },\n\n        _onOpenWS: function(event) {\n            this._isInstalled = true;\n            this._isConnected = true;\n            this.getConnection().maxReconnectAttempts = null;\n            this.trigger('connected', this);\n            this._autorize();\n        },\n\n        _onErrorWS: function(event, dd) {\n            if(this._candidates === null && this._defaultPort[this._currentDefaultPortIndex + 1]){\n                // if first connected and have next default port\n                if(this._getCurrentPort() == this._defaultPort[this._currentDefaultPortIndex]){\n                    // if port is default, then connect to the next default port\n                    this._currentDefaultPortIndex++;\n                }\n                this.abort();\n                this.getConnection();\n            }else{\n                this.abort();\n                this.trigger('error', this);\n            }\n        },\n\n        _onMessageWS: function(event) {\n            var message = null;\n            if(event.hasOwnProperty('data') && event.data){\n                try{\n                    message = JSON.parse(event.data);\n                }catch(e){\n                    logger.error('Bad message', e);\n                }\n            }\n            if(message && message.hasOwnProperty('message')){\n                switch (message.message.substr(0, 2)) {\n                    case 'E_': message.type = 'event';\n                        break;\n                    case 'R_': message.type = 'response';\n                        break;\n                    case 'C_': message.type = 'chunked';\n                        break;\n                    default: message.type = 'message';\n                        break;\n                }\n\n                message.application = message.message.substr(2);\n                message.application = message.application.toLowerCase();\n            }\n\n            if(message && message.hasOwnProperty('id')){\n                if(message.type == 'response' && this._requestsCallback.hasOwnProperty(message.id)){\n                    if(this._requestsCallback[message.id].hasOwnProperty('callback')){\n                        this._requestsCallback[message.id].callback(message.msgdata);\n                    }\n                    delete this._requestsCallback[message.id];\n                }\n            }\n\n            this.trigger(message.type + ':' + message.application, message);\n        },\n\n        _onCloseWS: function(event) {\n            if(this._isConnected){\n                this._isConnected = false;\n                logger.error('WS closed', event);\n                this.trigger('close', this);\n            }\n        }\n    });\n\n    return Connector;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Connector.js\n// module id = 9\n// module chunks = 0 1","/**\n * Represents a geographic location of User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Location\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property address {string} Address of this location\n * @property lat {string} Latitude in degrees\n * @property lng {string} Longitude in degrees\n * @example\n * user.get('location').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Location = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n\n    var logger = Logger.get('Location');\n\n    return Backbone.Model.extend({\n        defaults: {\n            address: '',\n            lat: '',\n            lng: ''\n        },\n        initialize: function() {\n            logger.info('initialize');\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Location.js\n// module id = 10\n// module chunks = 0 1","/**\n * Represents a presence of a User.<br />\n * Used in user model and can be received from {@link Wildix.Models.User}.\n *\n * @class Presence\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property type {string} Type status\n *                        <ul>\n *                            <li>available</li>\n *                            <li>unavailable</li>\n *                        </ul>\n * @property show {string} Main status\n *                              <ul>\n *                                  <li>available</li>\n *                                  <li>dnd</li>\n *                                  <li>away</li>\n *                                  <li>mur</li>\n *                              </ul>\n * @property status {string} Status message.\n * @property deviceShow {string} Device state\n *                              <ul>\n *                                  <li>ringing</li>\n *                                  <li>talking</li>\n *                                  <li>rt</li>\n *                                  <li>registered</li>\n *                              </ul>\n * @property until {string} Expire date - a date when this presence are valid.\n * @example\n * user.get('presence').get(property)\n */\n\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(require('backbone'));\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['backbone'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.Presence = factory(root.Backbone);\n    }\n}(this, function (Backbone){\n    'use strict';\n    var logger = Logger.get('Presence');\n\n    return Backbone.Model.extend({\n        defaults: {\n            type: 'unavailable', // available || unavailable\n            show: '',  // dnd || away || available\n            status: '',\n            deviceShow: '', // ringing || talking || rt\n            until: '' // Date\n        },\n\n        initialize: function() {\n            logger.info('initialize');\n        },\n\n        isAvailable: function(){\n            if(this.get('type') == 'available'){\n                return true;\n            }\n            return false;\n        },\n\n        isUnavailable: function(){\n            if(this.get('type') == 'unavailable'){\n                return true;\n            }\n            return false;\n        },\n\n        getFormattedUntil: function(){\n            if(this.get('until') && this.get('until') != ''){\n                return this.get('until').format('dd/mm/yyyy HH:MM');\n            }\n            return '';\n        }\n    });\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/Presence.js\n// module id = 11\n// module chunks = 0 1","/**\n * Represents a user that are participated in Wildix PBX.\n *\n * @class User\n * @memberof Wildix.Models\n * @extends external:Backbone.Model\n *\n * @property email {string}\n * @property extension {string} Can be empty when user doesn't have extension, for example user from Kite service.\n * @property faxNumber {string}\n * @property id {string}\n * @property language {string}\n * @property mobilePhone {string}\n * @property name {string}\n * @property officePhone {string}\n * @property picture {string} Url to the picture of the user\n * @property presence {Wildix.Models.Presence}\n * @property location {Wildix.Models.Location}\n * @property call {Wildix.Models.Call}\n */\n(function universalModuleDefinition(root, factory){\n    if (typeof exports == 'object'){\n        // CommonJS\n        module.exports = factory(\n                require('underscore'), require('backbone'),\n                require('Models/Presence'), require('Models/Location'),\n                require('Models/Call')\n        );\n    } else if (typeof define == 'function' && define.amd){\n        // AMD\n        define(['underscore', 'backbone', 'Models/Presence', 'Models/Location', 'Models/Call'], factory);\n    } else {\n        // Browser\n        root.Models = root.Models || {};\n        root.Models.User = factory(\n                root.underscore,\n                root.Backbone,\n                root.Models.Presence,\n                root.Models.Location,\n                root.Models.Call\n        );\n    }\n}(this, function (_, Backbone, Presence, Location, Call){\n    'use strict';\n    var logger = Logger.get('User');\n\n    var User = Backbone.Model.extend({\n\n        composite: {\n            presence: Presence,\n            call: Call,\n            location: Location\n        },\n\n        defaults: {\n            email: '',\n            extension: '',\n            faxNumber: '',\n            id: '',\n            language: '',\n            mobilePhone: '',\n            name: '',\n            officePhone: '',\n            picture: '',\n            presence: null,\n            location: null,\n            call: null\n        },\n\n        idAttribute: 'id',\n\n        initialize: function(data, options) {\n            logger.info('initialize');\n\n            this.makeComposite(options);\n        }\n    });\n\n    Backbone.mixinCompositeModel(User.prototype);\n\n    return User;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Models/User.js\n// module id = 12\n// module chunks = 0 1","/**\n * The Backbone namespace.\n *\n *\n * @external Backbone\n * @see {@link http://backbonejs.org/|Backbone}\n */\n\n/**\n * The Backbone collection class.\n *\n * @class Collection\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Collection|Backbone.Collection}\n */\n\n/**\n * The Backbone model class.\n *\n * @class Model\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Model|Backbone.Model}\n */\n\n/**\n * The Backbone events class.\n *\n * @class Events\n * @memberof external:Backbone\n * @see {@link http://backbonejs.org/#Events|Backbone.Events}\n */\n\n/**\n * The Wildix namespace.\n *\n * @namespace Wildix\n */\n\n/**\n * The Models namespace.\n *\n * @namespace Models\n * @memberof Wildix\n */\n\nrequire('plugins/backbone.mixinCompositeModel');\n\nrequire('Roster');\nrequire('Chat');\nrequire('Telephony');\n\nif (typeof exports == 'object'){\n    module.exports = require('IntegrationService');\n}else{\n    require('IntegrationService');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 13\n// module chunks = 0 1","// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module !== 'undefined' && module.exports){\n        module.exports = factory();\n    } else {\n        global.ReconnectingWebSocket = factory();\n    }\n})(this, function () {\n\n    if (!('WebSocket' in window)) {\n        return;\n    }\n\n    function ReconnectingWebSocket(url, protocols, options) {\n\n        // Default settings\n        var settings = {\n\n            /** Whether this instance should log debug messages. */\n            debug: false,\n\n            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n            automaticOpen: true,\n\n            /** The number of milliseconds to delay before attempting to reconnect. */\n            reconnectInterval: 1000,\n            /** The maximum number of milliseconds to delay a reconnection attempt. */\n            maxReconnectInterval: 30000,\n            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n            reconnectDecay: 1.5,\n\n            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n            timeoutInterval: 2000,\n\n            /** The maximum number of reconnection attempts to make. Unlimited if null. */\n            maxReconnectAttempts: null\n        }\n        if (!options) { options = {}; }\n\n        // Overwrite and define settings with options if they exist.\n        for (var key in settings) {\n            if (typeof options[key] !== 'undefined') {\n                this[key] = options[key];\n            } else {\n                this[key] = settings[key];\n            }\n        }\n\n        // These should be treated as read-only properties\n\n        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n        this.url = url;\n\n        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n        this.reconnectAttempts = 0;\n\n        /**\n         * The current state of the connection.\n         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n         * Read only.\n         */\n        this.readyState = WebSocket.CONNECTING;\n\n        /**\n         * A string indicating the name of the sub-protocol the server selected; this will be one of\n         * the strings specified in the protocols parameter when creating the WebSocket object.\n         * Read only.\n         */\n        this.protocol = null;\n\n        // Private state variables\n\n        var self = this;\n        var ws;\n        var forcedClose = false;\n        var timedOut = false;\n        var eventTarget = document.createElement('div');\n\n        // Wire up \"on*\" properties as event handlers\n\n        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });\n        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });\n        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });\n        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });\n        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });\n\n        // Expose the API required by EventTarget\n\n        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);\n        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n        /**\n         * This function generates an event that is compatible with standard\n         * compliant browsers and IE9 - IE11\n         *\n         * This will prevent the error:\n         * Object doesn't support this action\n         *\n         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n         * @param s String The name that the event should use\n         * @param args Object an optional object that the event will use\n         */\n        function generateEvent(s, args) {\n        \tvar evt = document.createEvent(\"CustomEvent\");\n        \tevt.initCustomEvent(s, false, false, args);\n        \treturn evt;\n        };\n\n        this.open = function (reconnectAttempt) {\n            ws = new WebSocket(self.url, protocols || []);\n\n            if (reconnectAttempt) {\n                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {\n                    return;\n                }\n            } else {\n                eventTarget.dispatchEvent(generateEvent('connecting'));\n                this.reconnectAttempts = 0;\n            }\n\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);\n            }\n\n            var localWs = ws;\n            var timeout = setTimeout(function() {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);\n                }\n                timedOut = true;\n                localWs.close();\n                timedOut = false;\n            }, self.timeoutInterval);\n\n            ws.onopen = function(event) {\n                clearTimeout(timeout);\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onopen', self.url);\n                }\n                self.protocol = ws.protocol;\n                self.readyState = WebSocket.OPEN;\n                self.reconnectAttempts = 0;\n                var e = generateEvent('open');\n                e.isReconnect = reconnectAttempt;\n                reconnectAttempt = false;\n                eventTarget.dispatchEvent(e);\n            };\n\n            ws.onclose = function(event) {\n                clearTimeout(timeout);\n                ws = null;\n                if (forcedClose) {\n                    self.readyState = WebSocket.CLOSED;\n                    eventTarget.dispatchEvent(generateEvent('close'));\n                } else {\n                    self.readyState = WebSocket.CONNECTING;\n                    var e = generateEvent('connecting');\n                    e.code = event.code;\n                    e.reason = event.reason;\n                    e.wasClean = event.wasClean;\n                    eventTarget.dispatchEvent(e);\n                    if (!reconnectAttempt && !timedOut) {\n                        if (self.debug || ReconnectingWebSocket.debugAll) {\n                            console.debug('ReconnectingWebSocket', 'onclose', self.url);\n                        }\n                        eventTarget.dispatchEvent(generateEvent('close'));\n                    }\n\n                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);\n                    setTimeout(function() {\n                        self.reconnectAttempts++;\n                        self.open(true);\n                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);\n                }\n            };\n            ws.onmessage = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);\n                }\n                var e = generateEvent('message');\n                e.data = event.data;\n                eventTarget.dispatchEvent(e);\n            };\n            ws.onerror = function(event) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);\n                }\n                eventTarget.dispatchEvent(generateEvent('error'));\n            };\n        }\n\n        // Whether or not to create a websocket upon instantiation\n        if (this.automaticOpen == true) {\n            this.open(false);\n        }\n\n        /**\n         * Transmits data to the server over the WebSocket connection.\n         *\n         * @param data a text string, ArrayBuffer or Blob to send to the server.\n         */\n        this.send = function(data) {\n            if (ws) {\n                if (self.debug || ReconnectingWebSocket.debugAll) {\n                    console.debug('ReconnectingWebSocket', 'send', self.url, data);\n                }\n                return ws.send(data);\n            } else {\n                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n            }\n        };\n\n        /**\n         * Closes the WebSocket connection or connection attempt, if any.\n         * If the connection is already CLOSED, this method does nothing.\n         */\n        this.close = function(code, reason) {\n            // Default CLOSE_NORMAL code\n            if (typeof code == 'undefined') {\n                code = 1000;\n            }\n            forcedClose = true;\n            if (ws) {\n                ws.close(code, reason);\n            }\n        };\n\n        /**\n         * Additional public API method to refresh the connection if still open (close, re-open).\n         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n         */\n        this.refresh = function() {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }\n\n    /**\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n     * this indicates that the connection is ready to send and receive data.\n     */\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n    /** An event listener to be called when a connection begins being attempted. */\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n    /** An event listener to be called when a message is received from the server. */\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n    /** An event listener to be called when an error occurs. */\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    /**\n     * Whether all instances of ReconnectingWebSocket should log debug messages.\n     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n     */\n    ReconnectingWebSocket.debugAll = false;\n\n    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n    ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n    return ReconnectingWebSocket;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/reconnectingwebsocket/reconnecting-websocket.js\n// module id = 14\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/global.js\n// module id = 15\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 16\n// module chunks = 0 1"],"sourceRoot":""}